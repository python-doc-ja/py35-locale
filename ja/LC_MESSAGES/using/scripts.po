# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# 
# Translators:
# Nozomu Kaneko <nozom.kaneko@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 3.5\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2016-09-04 23:34+0000\n"
"Last-Translator: Nozomu Kaneko <nozom.kaneko@gmail.com>\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc-ja/python-35/language/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../using/scripts.rst:4
msgid "Additional Tools and Scripts"
msgstr "その他のツールとスクリプト"

#: ../../using/scripts.rst:9
msgid "pyvenv - Creating virtual environments"
msgstr "pyvenv - 仮想環境の作成"

#: ../../using/venv-create.inc:1
msgid ""
"Creation of :ref:`virtual environments <venv-def>` is done by executing the "
"``pyvenv`` script::"
msgstr "``pyvenv`` スクリプトを実行することで :ref:`virtual environments <venv-def>` を作成出来ます ::"

#: ../../using/venv-create.inc:6
msgid ""
"Running this command creates the target directory (creating any parent "
"directories that don't exist already) and places a ``pyvenv.cfg`` file in it"
" with a ``home`` key pointing to the Python installation the command was run"
" from.  It also creates a ``bin`` (or ``Scripts`` on Windows) subdirectory "
"containing a copy of the ``python`` binary (or binaries, in the case of "
"Windows).  It also creates an (initially empty) ``lib/pythonX.Y/site-"
"packages`` subdirectory (on Windows, this is ``Lib\\site-packages``)."
msgstr "このコマンドを実行すると、対象のディレクトリ (および必要なだけの存在していない親ディレクトリ) が作成され、その中に ``pyvenv.cfg`` ファイルが置かれます。そのファイルの ``home`` キーはこのコマンドを呼び出した Python のインストール場所を指します。このコマンドはまた、``python`` バイナリのコピーを含む ``bin`` サブディレクトリを作成します (Windows では、``python`` バイナリを含む ``Scripts`` サブディレクトリを作成します)。さらに、``lib/pythonX.Y/site-packages`` (Windows では ``Lib\\site-packages``) サブディレクトリも (最初は空の状態で) 作成します。"

#: ../../using/venv-create.inc:16
msgid ""
"`Python Packaging User Guide: Creating and using virtual environments "
"<https://packaging.python.org/en/latest/installing/#creating-virtual-"
"environments>`__"
msgstr ""

#: ../../using/venv-create.inc:21
msgid ""
"On Windows, you may have to invoke the ``pyvenv`` script as follows, if you "
"don't have the relevant PATH and PATHEXT settings::"
msgstr "Windows では、関連する PATH および PATHEXT の設定をしていない場合、以下のように ``pyvenv`` スクリプトを呼び出さなければならないかもしれません::"

#: ../../using/venv-create.inc:26
msgid "or equivalently::"
msgstr "もしくは以下でも同じです::"

#: ../../using/venv-create.inc:30
msgid "The command, if run with ``-h``, will show the available options::"
msgstr "このコマンドを ``-h`` をつけて実行すると利用できるオプションが表示されます::"

#: ../../using/venv-create.inc:56
msgid ""
"Depending on how the ``venv`` functionality has been invoked, the usage "
"message may vary slightly, e.g. referencing ``pyvenv`` rather than ``venv``."
msgstr "``venv`` 機能がどのように起動されたかによって使用法のメッセージが微妙に変わるかもしれません。例えば ``venv`` でなく ``pyvenv`` について述べるかもしれません。"

#: ../../using/venv-create.inc:59
msgid ""
"Installs pip by default, added the ``--without-pip``  and ``--copies`` "
"options"
msgstr "デフォルトで pip をインストールします。``--without-pip`` と ``--copies`` オプションを追加しました。"

#: ../../using/venv-create.inc:63
msgid ""
"In earlier versions, if the target directory already existed, an error was "
"raised, unless the ``--clear`` or ``--upgrade`` option was provided. Now, if"
" an existing directory is specified, its contents are removed and the "
"directory is processed as if it had been newly created."
msgstr "以前のバージョンでは ``--clear`` か ``--upgrade`` オプションが指定されていない限り、対象のディレクトリが既に存在していた場合はエラーを送出していました。\n現在は、既存のディレクトリが指定された場合、中身が削除されディレクトリは新規作成されたように扱われます。"

#: ../../using/venv-create.inc:69
msgid ""
"The created ``pyvenv.cfg`` file also includes the ``include-system-site-"
"packages`` key, set to ``true`` if ``venv`` is run with the ``--system-site-"
"packages`` option, ``false`` otherwise."
msgstr "作成された ``pyvenv.cfg`` ファイルには、``include-system-site-packages`` キーも含まれます。これは ``venv`` が ``--system-site-packages`` オプションをつけて実行されたなら ``true`` で、そうでなければ ``false`` です。"

#: ../../using/venv-create.inc:73
msgid ""
"Unless the ``--without-pip`` option is given, :mod:`ensurepip` will be "
"invoked to bootstrap ``pip`` into the virtual environment."
msgstr "``--without-pip`` オプションが与えられない限り、``pip`` を仮想環境でブートするために :mod:`ensurepip` が呼ばれます。"

#: ../../using/venv-create.inc:76
msgid ""
"Multiple paths can be given to ``pyvenv``, in which case an identical "
"virtualenv will be created, according to the given options, at each provided"
" path."
msgstr "``pyvenv`` に複数のパスを与えることもできます。この場合、与えられたそれぞれのパスに、与えられたオプションに従って、同様の仮想環境が作成されます。"

#: ../../using/venv-create.inc:80
msgid ""
"Once a venv has been created, it can be \"activated\" using a script in the "
"venv's binary directory. The invocation of the script is platform-specific:"
msgstr "一旦 venv が作成されれば、venv のバイナリディレクトリにあるスクリプトで \"有効化\" できます。スクリプトの呼び出しはプラットフォーム固有です:"

#: ../../using/venv-create.inc:84
msgid "Platform"
msgstr "プラットフォーム"

#: ../../using/venv-create.inc:84
msgid "Shell"
msgstr "シェル"

#: ../../using/venv-create.inc:84
msgid "Command to activate virtual environment"
msgstr "仮想環境を有効化するためのコマンド"

#: ../../using/venv-create.inc:86
msgid "Posix"
msgstr "Posix"

#: ../../using/venv-create.inc:86
msgid "bash/zsh"
msgstr "bash/zsh"

#: ../../using/venv-create.inc:86
msgid "$ source <venv>/bin/activate"
msgstr "$ source <venv>/bin/activate"

#: ../../using/venv-create.inc:88
msgid "fish"
msgstr "fish"

#: ../../using/venv-create.inc:88
msgid "$ . <venv>/bin/activate.fish"
msgstr "$ . <venv>/bin/activate.fish"

#: ../../using/venv-create.inc:90
msgid "csh/tcsh"
msgstr "csh/tcsh"

#: ../../using/venv-create.inc:90
msgid "$ source <venv>/bin/activate.csh"
msgstr "$ source <venv>/bin/activate.csh"

#: ../../using/venv-create.inc:92
msgid "Windows"
msgstr "Windows"

#: ../../using/venv-create.inc:92
msgid "cmd.exe"
msgstr "cmd.exe"

#: ../../using/venv-create.inc:92
msgid "C:\\\\> <venv>\\\\Scripts\\\\activate.bat"
msgstr "C:\\\\> <venv>\\\\Scripts\\\\activate.bat"

#: ../../using/venv-create.inc:94
msgid "PowerShell"
msgstr "PowerShell"

#: ../../using/venv-create.inc:94
msgid "PS C:\\\\> <venv>\\\\Scripts\\\\Activate.ps1"
msgstr "PS C:\\\\> <venv>\\\\Scripts\\\\Activate.ps1"

#: ../../using/venv-create.inc:97
msgid ""
"You don't specifically *need* to activate an environment; activation just "
"prepends the venv's binary directory to your path, so that \"python\" "
"invokes the venv's Python interpreter and you can run installed scripts "
"without having to use their full path. However, all scripts installed in a "
"venv should be runnable without activating it, and run with the venv's "
"Python automatically."
msgstr "環境の有効化に特別な指定は *必要* ありません。有効化は venv のバイナリディレクトリをパスの最初に加えることで、\"python\" で venv の Python インタプリタが呼び出されるようにし、インストールされたスクリプトをフルパス無しで実行できるようにするだけです。しかし、インストールされたすべてのスクリプトは有効化しなくても実行可能で、venv の Python で自動的に実行されなければなりません。"

#: ../../using/venv-create.inc:103
msgid ""
"You can deactivate a venv by typing \"deactivate\" in your shell. The exact "
"mechanism is platform-specific: for example, the Bash activation script "
"defines a \"deactivate\" function, whereas on Windows there are separate "
"scripts called ``deactivate.bat`` and ``Deactivate.ps1`` which are installed"
" when the venv is created."
msgstr "シェルで \"deactivate\" と入力することで、venv を無効化できます。正確な機構はプラットフォーム固有です。例えば、Bash の有効化スクリプトは \"deactivate\" 関数を定義しています。一方 Windows では、venv が作成されるときに ``deactivate.bat`` と ``Deactivate.ps1`` という別々のスクリプトがインストールされます。"

#: ../../using/venv-create.inc:109
msgid "``fish`` and ``csh`` activation scripts."
msgstr "``fish`` および ``csh`` 有効化スクリプト。"
