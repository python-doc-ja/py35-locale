# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# 
# Translators:
# Nozomu Kaneko <nozom.kaneko@gmail.com>, 2016
# tomo, 2016-2017
msgid ""
msgstr ""
"Project-Id-Version: Python 3.5\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2017-01-29 08:51+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-35/language/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/asyncio.rst:2
msgid ":mod:`asyncio` --- Asynchronous I/O, event loop, coroutines and tasks"
msgstr ":mod:`asyncio` --- 非同期 I/O、イベントループ、コルーチンおよびタスク"

#: ../../library/asyncio.rst:9
msgid "**Source code:** :source:`Lib/asyncio/`"
msgstr "**ソースコード:** :source:`Lib/asyncio/`"

#: ../../library/asyncio.rst:13
msgid ""
"The asyncio package has been included in the standard library on a "
":term:`provisional basis <provisional package>`. Backwards incompatible "
"changes (up to and including removal of the module) may occur if deemed "
"necessary by the core developers."
msgstr "asyncio パッケージは、:term:`暫定パッケージ <provisional package>` として標準ライブラリに含まれています。コア開発者が必要と判断したときは、(モジュールの削除も含めた) 後方互換性が破壊される可能性があります。"

#: ../../library/asyncio.rst:20
msgid ""
"This module provides infrastructure for writing single-threaded concurrent "
"code using coroutines, multiplexing I/O access over sockets and other "
"resources, running network clients and servers, and other related "
"primitives. Here is a more detailed list of the package contents:"
msgstr "このモジュールは、コルーチン、ソケットあるいはその他リソースを使用した多重 I/O、ネットワーククライアントあるいはサーバーの実行、およびその他関連するプリミティブを使用した、シングルスレッド処理を並行で実行するコードを作成するためのインフラストラクチャを提供します。ここではパッケージ内容の詳細ページの一覧を示しています:"

#: ../../library/asyncio.rst:25
msgid ""
"a pluggable :ref:`event loop <asyncio-event-loop>` with various system-"
"specific implementations;"
msgstr "さまざまなシステム固有の実装とプラグ可能な :ref:`イベントループ <asyncio-event-loop>`;"

#: ../../library/asyncio.rst:28
msgid ""
":ref:`transport <asyncio-transport>` and :ref:`protocol <asyncio-protocol>` "
"abstractions (similar to those in `Twisted "
"<https://twistedmatrix.com/trac/>`_);"
msgstr ":ref:`トランスポート <asyncio-transport>` および :ref:`プロトコル <asyncio-protocol>` の抽象化 (`Twisted <https://twistedmatrix.com/trac/>`_ でのそれらに類似);"

#: ../../library/asyncio.rst:31
msgid ""
"concrete support for TCP, UDP, SSL, subprocess pipes, delayed calls, and "
"others (some may be system-dependent);"
msgstr "TCP、UDP、SSL、サブプロセス、遅延呼び出しなどの実体サポート (一部はシステム依存);"

#: ../../library/asyncio.rst:34
msgid ""
"a :class:`Future` class that mimics the one in the :mod:`concurrent.futures`"
" module, but adapted for use with the event loop;"
msgstr ":mod:`concurrent.futures` モジュールの一つに類似するが、イベントループでの使用に適応した :class:`Future` クラス;"

#: ../../library/asyncio.rst:37
msgid ""
"coroutines and tasks based on ``yield from`` (:PEP:`380`), to help write "
"concurrent code in a sequential fashion;"
msgstr "逐次処理の並行コードの作成を支援する、``yield from`` (:PEP:`380`) に基づいたコルーチンおよびタスク;"

#: ../../library/asyncio.rst:40
msgid "cancellation support for :class:`Future`\\s and coroutines;"
msgstr ":class:`Future` およびコルーチンのキャンセルのサポート;"

#: ../../library/asyncio.rst:42
msgid ""
":ref:`synchronization primitives <asyncio-sync>` for use between coroutines "
"in a single thread, mimicking those in the :mod:`threading` module;"
msgstr ":mod:`threading` モジュール内のそれに類似した、シングルスレッド内のコルーチン間で使用する :ref:`同期化プリミティブ <asyncio-sync>`;"

#: ../../library/asyncio.rst:45
msgid ""
"an interface for passing work off to a threadpool, for times when you "
"absolutely, positively have to use a library that makes blocking I/O calls."
msgstr "ブロッキング I/O 呼び出しを行うライブラリを絶対的かつ積極的に使う必要がある時に、スレッドプールに仕事を投げるためのインタフェース"

#: ../../library/asyncio.rst:49
msgid ""
"Asynchronous programming is more complex than classical \"sequential\" "
"programming: see the :ref:`Develop with asyncio <asyncio-dev>` page which "
"lists common traps and explains how to avoid them. :ref:`Enable the debug "
"mode <asyncio-debug-mode>` during development to detect common issues."
msgstr "非同期プログラミングは古典的な \"逐次\" プログラミングと比べるとより複雑です。非同期プログラミングで陥りやすい落とし穴の一覧とその回避方法について説明している :ref:`Develop with asyncio <asyncio-dev>` を参照してください。開発の間は、よくある問題を検出するために :ref:`デバッグモードを有効にしてください <asyncio-debug-mode>` 。"

#: ../../library/asyncio.rst:54
msgid "Table of contents:"
msgstr "目次:"

#: ../../library/asyncio.rst:71
msgid ""
"The :mod:`asyncio` module was designed in :PEP:`3156`. For a motivational "
"primer on transports and protocols, see :PEP:`3153`."
msgstr ":mod:`asyncio` モジュールは :PEP:`3156` において設計されました。トランスポートとプロトコルの動機付けとなる入門書は :PEP:`3153` を参照してください。"
