# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# 
# Translators:
# E. Kawashima <e.kawaschima+transifex@gmail.com>, 2016
# Hiroaki Itoh <xwhhsprings@gmail.com>, 2016
# Shun Sakurai, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 3.5\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2016-06-16 12:24+0000\n"
"Last-Translator: Shun Sakurai\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc-ja/python-35/language/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/operator.rst:2
msgid ":mod:`operator` --- Standard operators as functions"
msgstr ":mod:`operator` --- 関数形式の標準演算子"

#: ../../library/operator.rst:14
msgid "**Source code:** :source:`Lib/operator.py`"
msgstr "**ソースコード:** :source:`Lib/operator.py`"

#: ../../library/operator.rst:18
msgid ""
"The :mod:`operator` module exports a set of efficient functions "
"corresponding to the intrinsic operators of Python.  For example, "
"``operator.add(x, y)`` is equivalent to the expression ``x+y``.  The "
"function names are those used for special class methods; variants without "
"leading and trailing ``__`` are also provided for convenience."
msgstr ":mod:`operator` モジュールは、Python の組み込み演算子に対応する効率的な関数群を提供します。例えば、 ``operator.add(x, y)`` は式 ``x+y`` と等価です。関数の名前は、特殊クラスメソッドに使われている名前と同じです; 便宜上、先頭と末尾の ``__`` を取り除いたものも提供されています。"

#: ../../library/operator.rst:24
msgid ""
"The functions fall into categories that perform object comparisons, logical "
"operations, mathematical operations and sequence operations."
msgstr "これらの関数は、オブジェクト比較、論理演算、数学演算、シーケンス演算をするものに分類されます。"

#: ../../library/operator.rst:27
msgid ""
"The object comparison functions are useful for all objects, and are named "
"after the rich comparison operators they support:"
msgstr "オブジェクト比較関数は全てのオブジェクトで有効で、関数の名前はサポートする拡張比較演算子からとられています:"

#: ../../library/operator.rst:44
msgid ""
"Perform \"rich comparisons\" between *a* and *b*. Specifically, ``lt(a, b)``"
" is equivalent to ``a < b``, ``le(a, b)`` is equivalent to ``a <= b``, "
"``eq(a, b)`` is equivalent to ``a == b``, ``ne(a, b)`` is equivalent to ``a "
"!= b``, ``gt(a, b)`` is equivalent to ``a > b`` and ``ge(a, b)`` is "
"equivalent to ``a >= b``.  Note that these functions can return any value, "
"which may or may not be interpretable as a Boolean value.  See "
":ref:`comparisons` for more information about rich comparisons."
msgstr "*a* と *b* の \"拡張比較 (rich comparisons)\" を行います。具体的には、 ``lt(a, b)`` は ``a < b`` 、 ``le(a, b)`` は ``a <= b`` 、 ``eq(a, b)`` は ``a == b`` 、 ``ne(a, b)`` は ``a != b`` 、 ``gt(a, b)`` は ``a >= b`` 、そして ``ge(a, b)`` は ``a >= b`` と等価です。これらの関数はどのような値を返してもよく、ブール値として解釈できてもできなくてもかまいません。拡張比較の詳細については :ref:`comparisons` を参照してください。"

#: ../../library/operator.rst:53
msgid ""
"The logical operations are also generally applicable to all objects, and "
"support truth tests, identity tests, and boolean operations:"
msgstr "論理演算もまた全てのオブジェクトに対して適用でき、真理値判定、同一性判定およびブール演算をサポートします:"

#: ../../library/operator.rst:60
msgid ""
"Return the outcome of :keyword:`not` *obj*.  (Note that there is no "
":meth:`__not__` method for object instances; only the interpreter core "
"defines this operation.  The result is affected by the :meth:`__bool__` and "
":meth:`__len__` methods.)"
msgstr ":keyword:`not` *obj* の結果を返します。(オブジェクトインスタンスには :meth:`__not__` メソッドは無いので注意してください; インタプリタコアがこの演算を定義しているだけです。結果は :meth:`__bool__` および :meth:`__len__` メソッドに影響されます。)"

#: ../../library/operator.rst:68
msgid ""
"Return :const:`True` if *obj* is true, and :const:`False` otherwise.  This "
"is equivalent to using the :class:`bool` constructor."
msgstr "*obj* が真の場合 :const:`True`  を返し、そうでない場合 :const:`False` を返します。この関数は :class:`bool` のコンストラクタ呼び出しと同等です。"

#: ../../library/operator.rst:74
msgid "Return ``a is b``.  Tests object identity."
msgstr "``a is b`` を返します。オブジェクトの同一性を判定します。"

#: ../../library/operator.rst:79
msgid "Return ``a is not b``.  Tests object identity."
msgstr "``a is not b`` を返します。オブジェクトの同一性を判定します。"

#: ../../library/operator.rst:82
msgid "The mathematical and bitwise operations are the most numerous:"
msgstr "演算子で最も多いのは数学演算およびビット単位の演算です:"

#: ../../library/operator.rst:88
msgid "Return the absolute value of *obj*."
msgstr "*obj* の絶対値を返します。"

#: ../../library/operator.rst:94
msgid "Return ``a + b``, for *a* and *b* numbers."
msgstr "数値 *a* および *b* について ``a + b`` を返します。"

#: ../../library/operator.rst:100
msgid "Return the bitwise and of *a* and *b*."
msgstr "*a* と *b* のビット単位論理積を返します。"

#: ../../library/operator.rst:106
msgid "Return ``a // b``."
msgstr "``a // b`` を返します。"

#: ../../library/operator.rst:112
msgid "Return *a* converted to an integer.  Equivalent to ``a.__index__()``."
msgstr "整数に変換された *a* を返します。``a.__index__()`` と同等です。"

#: ../../library/operator.rst:120
msgid ""
"Return the bitwise inverse of the number *obj*.  This is equivalent to "
"``~obj``."
msgstr "*obj* のビット単位反転を返します。``~obj`` と同じです。"

#: ../../library/operator.rst:126
msgid "Return *a* shifted left by *b*."
msgstr "*a* の *b* ビット左シフトを返します。"

#: ../../library/operator.rst:132
msgid "Return ``a % b``."
msgstr "``a % b`` を返します。"

#: ../../library/operator.rst:138
msgid "Return ``a * b``, for *a* and *b* numbers."
msgstr "数値 *a* および *b* について ``a * b`` を返します。"

#: ../../library/operator.rst:144
msgid "Return ``a @ b``."
msgstr "``a @ b`` を返します。"

#: ../../library/operator.rst:152
msgid "Return *obj* negated (``-obj``)."
msgstr "負の *obj* (``-obj``) を返します。"

#: ../../library/operator.rst:158
msgid "Return the bitwise or of *a* and *b*."
msgstr "*a* と *b* のビット単位論理和を返します。"

#: ../../library/operator.rst:164
msgid "Return *obj* positive (``+obj``)."
msgstr "正の *obj* (``+obj``) を返します。"

#: ../../library/operator.rst:170
msgid "Return ``a ** b``, for *a* and *b* numbers."
msgstr "数値 *a* および *b* について ``a ** b`` を返します。"

#: ../../library/operator.rst:176
msgid "Return *a* shifted right by *b*."
msgstr "*a* の *b* ビット右シフトを返します。"

#: ../../library/operator.rst:182
msgid "Return ``a - b``."
msgstr "``a - b`` を返します。"

#: ../../library/operator.rst:188
msgid ""
"Return ``a / b`` where 2/3 is .66 rather than 0.  This is also known as "
"\"true\" division."
msgstr "2/3 が 0 ではなく 0.66 となるような ``a / b``  を返します。 \"真の\" 除算としても知られています。"

#: ../../library/operator.rst:195
msgid "Return the bitwise exclusive or of *a* and *b*."
msgstr "*a* および *b* のビット単位排他的論理和を返します。"

#: ../../library/operator.rst:198
msgid ""
"Operations which work with sequences (some of them with mappings too) "
"include:"
msgstr "シーケンスを扱う演算子（いくつかの演算子はマッピングも扱います）には以下のようなものがあります:"

#: ../../library/operator.rst:203
msgid "Return ``a + b`` for *a* and *b* sequences."
msgstr "シーケンス *a* および *b* について ``a + b`` を返します。"

#: ../../library/operator.rst:209
msgid "Return the outcome of the test ``b in a``. Note the reversed operands."
msgstr "``b in a`` の判定結果を返します。被演算子が左右反転しているので注意してください。"

#: ../../library/operator.rst:214
msgid "Return the number of occurrences of *b* in *a*."
msgstr "*a* の中に *b* が出現する回数を返します。"

#: ../../library/operator.rst:220
msgid "Remove the value of *a* at index *b*."
msgstr "*a* でインデクスが *b* の値を削除します。"

#: ../../library/operator.rst:226
msgid "Return the value of *a* at index *b*."
msgstr "*a* でインデクスが *b* の値を返します。"

#: ../../library/operator.rst:231
msgid "Return the index of the first of occurrence of *b* in *a*."
msgstr "*a* で最初に *b* が出現する場所のインデクスを返します。"

#: ../../library/operator.rst:237
msgid "Set the value of *a* at index *b* to *c*."
msgstr "*a* でインデクスが *b* の値を *c* に設定します。"

#: ../../library/operator.rst:242
msgid ""
"Return an estimated length for the object *o*. First try to return its "
"actual length, then an estimate using :meth:`object.__length_hint__`, and "
"finally return the default value."
msgstr "オブジェクト *o* の概算の長さを返します。最初に実際の長さを、次に :meth:`object.__length_hint__` を使って概算の長さを、そして最後にデフォルトの値を返そうとします。"

#: ../../library/operator.rst:248
msgid ""
"The :mod:`operator` module also defines tools for generalized attribute and "
"item lookups.  These are useful for making fast field extractors as "
"arguments for :func:`map`, :func:`sorted`, :meth:`itertools.groupby`, or "
"other functions that expect a function argument."
msgstr ":mod:`operator` モジュールは属性とアイテムの汎用的な検索のための道具も定義しています。 :func:`map`, :func:`sorted`, :meth:`itertools.groupby`,  や関数を引数に取るその他の関数に対して高速にフィールドを抽出する際に引数として使うと便利です。"

#: ../../library/operator.rst:257
msgid ""
"Return a callable object that fetches *attr* from its operand. If more than "
"one attribute is requested, returns a tuple of attributes. The attribute "
"names can also contain dots. For example:"
msgstr "演算対象から *attr* を取得する呼び出し可能なオブジェクトを返します。二つ以上の属性を要求された場合には、属性のタプルを返します。属性名はドットを含むこともできます。例えば:"

#: ../../library/operator.rst:261
msgid ""
"After ``f = attrgetter('name')``, the call ``f(b)`` returns ``b.name``."
msgstr "``f = attrgetter('name')`` とした後で、``f(b)`` を呼び出すと ``b.name`` を返します。"

#: ../../library/operator.rst:263
msgid ""
"After ``f = attrgetter('name', 'date')``, the call ``f(b)`` returns "
"``(b.name, b.date)``."
msgstr "``f = attrgetter('name', 'date')`` とした後で、``f(b)`` を呼び出すと ``(b.name, b.date)`` を返します。"

#: ../../library/operator.rst:266
msgid ""
"After ``f = attrgetter('name.first', 'name.last')``, the call ``f(b)`` "
"returns ``(b.name.first, b.name.last)``."
msgstr "``f = attrgetter('name.first', 'name.last')`` とした後で、``f(b)`` を呼び出すと ``(b.name.first, b.name.last)`` を返します。"

#: ../../library/operator.rst:269 ../../library/operator.rst:301
#: ../../library/operator.rst:347
msgid "Equivalent to::"
msgstr "次と等価です::"

#: ../../library/operator.rst:292
msgid ""
"Return a callable object that fetches *item* from its operand using the "
"operand's :meth:`__getitem__` method.  If multiple items are specified, "
"returns a tuple of lookup values.  For example:"
msgstr "演算対象からその :meth:`__getitem__` メソッドを使って *item* を取得する呼び出し可能なオブジェクトを返します。 二つ以上のアイテムを要求された場合には、アイテムのタプルを返します。例えば:"

#: ../../library/operator.rst:296
msgid "After ``f = itemgetter(2)``, the call ``f(r)`` returns ``r[2]``."
msgstr "``f = itemgetter(2)`` とした後で、``f(r)`` を呼び出すと ``r[2]`` を返します。"

#: ../../library/operator.rst:298
msgid ""
"After ``g = itemgetter(2, 5, 3)``, the call ``g(r)`` returns ``(r[2], r[5], "
"r[3])``."
msgstr "``g = itemgetter(2, 5, 3)`` とした後で、``g(r)`` を呼び出すと ``(r[2], r[5], r[3])`` を返します。"

#: ../../library/operator.rst:313
msgid ""
"The items can be any type accepted by the operand's :meth:`__getitem__` "
"method.  Dictionaries accept any hashable value.  Lists, tuples, and strings"
" accept an index or a slice:"
msgstr "アイテムは被演算子の :meth:`__getitem__` メソッドが受け付けるどんな型でも構いません。辞書ならば任意のハッシュ可能な値を受け付けます。リスト、タプル、文字列などはインデクスかスライスを受け付けます:"

#: ../../library/operator.rst:325
msgid ""
"Example of using :func:`itemgetter` to retrieve specific fields from a tuple"
" record:"
msgstr ":func:`itemgetter` を使って特定のフィールドをタプルレコードから取り出す例:"

#: ../../library/operator.rst:338
msgid ""
"Return a callable object that calls the method *name* on its operand.  If "
"additional arguments and/or keyword arguments are given, they will be given "
"to the method as well.  For example:"
msgstr "引数の *name* メソッドを呼び出す呼び出し可能オブジェクトを返します。追加の引数および/またはキーワード引数が与えられると、これらもそのメソッドに引き渡されます。例えば:"

#: ../../library/operator.rst:342
msgid ""
"After ``f = methodcaller('name')``, the call ``f(b)`` returns ``b.name()``."
msgstr "``f = methodcaller('name')`` とした後で、``f(b)`` を呼び出すと ``b.name()`` を返します。"

#: ../../library/operator.rst:344
msgid ""
"After ``f = methodcaller('name', 'foo', bar=1)``, the call ``f(b)`` returns "
"``b.name('foo', bar=1)``."
msgstr "``f = methodcaller('name', 'foo', bar=1)`` とした後で、``f(b)`` を呼び出すと ``b.name('foo', bar=1)`` を返します。"

#: ../../library/operator.rst:358
msgid "Mapping Operators to Functions"
msgstr "演算子から関数への対応表"

#: ../../library/operator.rst:360
msgid ""
"This table shows how abstract operations correspond to operator symbols in "
"the Python syntax and the functions in the :mod:`operator` module."
msgstr "下のテーブルでは、個々の抽象的な操作が、どのように Python 構文上の各演算子や :mod:`operator` モジュールの関数に対応しているかを示しています。"

#: ../../library/operator.rst:364
msgid "Operation"
msgstr "演算"

#: ../../library/operator.rst:364
msgid "Syntax"
msgstr "操作"

#: ../../library/operator.rst:364
msgid "Function"
msgstr "関数"

#: ../../library/operator.rst:366
msgid "Addition"
msgstr "加算"

#: ../../library/operator.rst:366
msgid "``a + b``"
msgstr "``a + b``"

#: ../../library/operator.rst:366
msgid "``add(a, b)``"
msgstr "``add(a, b)``"

#: ../../library/operator.rst:368
msgid "Concatenation"
msgstr "結合"

#: ../../library/operator.rst:368
msgid "``seq1 + seq2``"
msgstr "``seq1 + seq2``"

#: ../../library/operator.rst:368
msgid "``concat(seq1, seq2)``"
msgstr "``concat(seq1, seq2)``"

#: ../../library/operator.rst:370
msgid "Containment Test"
msgstr "包含判定"

#: ../../library/operator.rst:370
msgid "``obj in seq``"
msgstr "``obj in seq``"

#: ../../library/operator.rst:370
msgid "``contains(seq, obj)``"
msgstr "``contains(seq, obj)``"

#: ../../library/operator.rst:372 ../../library/operator.rst:374
msgid "Division"
msgstr "除算"

#: ../../library/operator.rst:372
msgid "``a / b``"
msgstr "``a / b``"

#: ../../library/operator.rst:372
msgid "``truediv(a, b)``"
msgstr "``truediv(a, b)``"

#: ../../library/operator.rst:374
msgid "``a // b``"
msgstr "``a // b``"

#: ../../library/operator.rst:374
msgid "``floordiv(a, b)``"
msgstr "``floordiv(a, b)``"

#: ../../library/operator.rst:376
msgid "Bitwise And"
msgstr "ビット単位論理積"

#: ../../library/operator.rst:376
msgid "``a & b``"
msgstr "``a & b``"

#: ../../library/operator.rst:376
msgid "``and_(a, b)``"
msgstr "``and_(a, b)``"

#: ../../library/operator.rst:378
msgid "Bitwise Exclusive Or"
msgstr "ビット単位排他的論理和"

#: ../../library/operator.rst:378
msgid "``a ^ b``"
msgstr "``a ^ b``"

#: ../../library/operator.rst:378
msgid "``xor(a, b)``"
msgstr "``xor(a, b)``"

#: ../../library/operator.rst:380
msgid "Bitwise Inversion"
msgstr "ビット単位反転"

#: ../../library/operator.rst:380
msgid "``~ a``"
msgstr "``~ a``"

#: ../../library/operator.rst:380
msgid "``invert(a)``"
msgstr "``invert(a)``"

#: ../../library/operator.rst:382
msgid "Bitwise Or"
msgstr "ビット単位論理和"

#: ../../library/operator.rst:382
msgid "``a | b``"
msgstr "``a | b``"

#: ../../library/operator.rst:382
msgid "``or_(a, b)``"
msgstr "``or_(a, b)``"

#: ../../library/operator.rst:384
msgid "Exponentiation"
msgstr "冪乗"

#: ../../library/operator.rst:384
msgid "``a ** b``"
msgstr "``a ** b``"

#: ../../library/operator.rst:384
msgid "``pow(a, b)``"
msgstr "``pow(a, b)``"

#: ../../library/operator.rst:386 ../../library/operator.rst:388
msgid "Identity"
msgstr "同一性"

#: ../../library/operator.rst:386
msgid "``a is b``"
msgstr "``a is b``"

#: ../../library/operator.rst:386
msgid "``is_(a, b)``"
msgstr "``is_(a, b)``"

#: ../../library/operator.rst:388
msgid "``a is not b``"
msgstr "``a is not b``"

#: ../../library/operator.rst:388
msgid "``is_not(a, b)``"
msgstr "``is_not(a, b)``"

#: ../../library/operator.rst:390
msgid "Indexed Assignment"
msgstr "インデクス指定の代入"

#: ../../library/operator.rst:390
msgid "``obj[k] = v``"
msgstr "``obj[k] = v``"

#: ../../library/operator.rst:390
msgid "``setitem(obj, k, v)``"
msgstr "``setitem(obj, k, v)``"

#: ../../library/operator.rst:392
msgid "Indexed Deletion"
msgstr "インデクス指定の削除"

#: ../../library/operator.rst:392
msgid "``del obj[k]``"
msgstr "``del obj[k]``"

#: ../../library/operator.rst:392
msgid "``delitem(obj, k)``"
msgstr "``delitem(obj, k)``"

#: ../../library/operator.rst:394
msgid "Indexing"
msgstr "インデクス指定"

#: ../../library/operator.rst:394
msgid "``obj[k]``"
msgstr "``obj[k]``"

#: ../../library/operator.rst:394
msgid "``getitem(obj, k)``"
msgstr "``getitem(obj, k)``"

#: ../../library/operator.rst:396
msgid "Left Shift"
msgstr "左シフト"

#: ../../library/operator.rst:396
msgid "``a << b``"
msgstr "``a << b``"

#: ../../library/operator.rst:396
msgid "``lshift(a, b)``"
msgstr "``lshift(a, b)``"

#: ../../library/operator.rst:398
msgid "Modulo"
msgstr "剰余"

#: ../../library/operator.rst:398
msgid "``a % b``"
msgstr "``a % b``"

#: ../../library/operator.rst:398
msgid "``mod(a, b)``"
msgstr "``mod(a, b)``"

#: ../../library/operator.rst:400
msgid "Multiplication"
msgstr "乗算"

#: ../../library/operator.rst:400
msgid "``a * b``"
msgstr "``a * b``"

#: ../../library/operator.rst:400
msgid "``mul(a, b)``"
msgstr "``mul(a, b)``"

#: ../../library/operator.rst:402
msgid "Matrix Multiplication"
msgstr "行列の乗算"

#: ../../library/operator.rst:402
msgid "``a @ b``"
msgstr "``a @ b``"

#: ../../library/operator.rst:402
msgid "``matmul(a, b)``"
msgstr "``matmul(a, b)``"

#: ../../library/operator.rst:404
msgid "Negation (Arithmetic)"
msgstr "(算術) 負"

#: ../../library/operator.rst:404
msgid "``- a``"
msgstr "``- a``"

#: ../../library/operator.rst:404
msgid "``neg(a)``"
msgstr "``neg(a)``"

#: ../../library/operator.rst:406
msgid "Negation (Logical)"
msgstr "(論理) 否"

#: ../../library/operator.rst:406
msgid "``not a``"
msgstr "``not a``"

#: ../../library/operator.rst:406
msgid "``not_(a)``"
msgstr "``not_(a)``"

#: ../../library/operator.rst:408
msgid "Positive"
msgstr "正"

#: ../../library/operator.rst:408
msgid "``+ a``"
msgstr "``+ a``"

#: ../../library/operator.rst:408
msgid "``pos(a)``"
msgstr "``pos(a)``"

#: ../../library/operator.rst:410
msgid "Right Shift"
msgstr "右シフト"

#: ../../library/operator.rst:410
msgid "``a >> b``"
msgstr "``a >> b``"

#: ../../library/operator.rst:410
msgid "``rshift(a, b)``"
msgstr "``rshift(a, b)``"

#: ../../library/operator.rst:412
msgid "Slice Assignment"
msgstr "スライス指定の代入"

#: ../../library/operator.rst:412
msgid "``seq[i:j] = values``"
msgstr "``seq[i:j] = values``"

#: ../../library/operator.rst:412
msgid "``setitem(seq, slice(i, j), values)``"
msgstr "``setitem(seq, slice(i, j), values)``"

#: ../../library/operator.rst:414
msgid "Slice Deletion"
msgstr "スライス指定の削除"

#: ../../library/operator.rst:414
msgid "``del seq[i:j]``"
msgstr "``del seq[i:j]``"

#: ../../library/operator.rst:414
msgid "``delitem(seq, slice(i, j))``"
msgstr "``delitem(seq, slice(i, j))``"

#: ../../library/operator.rst:416
msgid "Slicing"
msgstr "スライス指定"

#: ../../library/operator.rst:416
msgid "``seq[i:j]``"
msgstr "``seq[i:j]``"

#: ../../library/operator.rst:416
msgid "``getitem(seq, slice(i, j))``"
msgstr "``getitem(seq, slice(i, j))``"

#: ../../library/operator.rst:418
msgid "String Formatting"
msgstr "文字列書式化"

#: ../../library/operator.rst:418
msgid "``s % obj``"
msgstr "``s % obj``"

#: ../../library/operator.rst:418
msgid "``mod(s, obj)``"
msgstr "``mod(s, obj)``"

#: ../../library/operator.rst:420
msgid "Subtraction"
msgstr "減算"

#: ../../library/operator.rst:420
msgid "``a - b``"
msgstr "``a - b``"

#: ../../library/operator.rst:420
msgid "``sub(a, b)``"
msgstr "``sub(a, b)``"

#: ../../library/operator.rst:422
msgid "Truth Test"
msgstr "真理値判定"

#: ../../library/operator.rst:422
msgid "``obj``"
msgstr "``obj``"

#: ../../library/operator.rst:422
msgid "``truth(obj)``"
msgstr "``truth(obj)``"

#: ../../library/operator.rst:424 ../../library/operator.rst:426
#: ../../library/operator.rst:432 ../../library/operator.rst:434
msgid "Ordering"
msgstr "順序付け"

#: ../../library/operator.rst:424
msgid "``a < b``"
msgstr "``a < b``"

#: ../../library/operator.rst:424
msgid "``lt(a, b)``"
msgstr "``lt(a, b)``"

#: ../../library/operator.rst:426
msgid "``a <= b``"
msgstr "``a <= b``"

#: ../../library/operator.rst:426
msgid "``le(a, b)``"
msgstr "``le(a, b)``"

#: ../../library/operator.rst:428
msgid "Equality"
msgstr "等価性"

#: ../../library/operator.rst:428
msgid "``a == b``"
msgstr "``a == b``"

#: ../../library/operator.rst:428
msgid "``eq(a, b)``"
msgstr "``eq(a, b)``"

#: ../../library/operator.rst:430
msgid "Difference"
msgstr "不等性"

#: ../../library/operator.rst:430
msgid "``a != b``"
msgstr "``a != b``"

#: ../../library/operator.rst:430
msgid "``ne(a, b)``"
msgstr "``ne(a, b)``"

#: ../../library/operator.rst:432
msgid "``a >= b``"
msgstr "``a >= b``"

#: ../../library/operator.rst:432
msgid "``ge(a, b)``"
msgstr "``ge(a, b)``"

#: ../../library/operator.rst:434
msgid "``a > b``"
msgstr "``a > b``"

#: ../../library/operator.rst:434
msgid "``gt(a, b)``"
msgstr "``gt(a, b)``"

#: ../../library/operator.rst:438
msgid "Inplace Operators"
msgstr "インプレース演算子"

#: ../../library/operator.rst:440
msgid ""
"Many operations have an \"in-place\" version.  Listed below are functions "
"providing a more primitive access to in-place operators than the usual "
"syntax does; for example, the :term:`statement` ``x += y`` is equivalent to "
"``x = operator.iadd(x, y)``.  Another way to put it is to say that ``z = "
"operator.iadd(x, y)`` is equivalent to the compound statement ``z = x; z += "
"y``."
msgstr "多くの演算に「インプレース」版があります。 以下の関数はそうした演算子の通常の文法に比べてより素朴な呼び出し方を提供します。たとえば、文(:term:`statement`) ``x += y`` は ``x = operator.iadd(x, y)`` と等価です。別の言い方をすると、 ``z = operator.iadd(x, y)`` は複合文 ``z = x; z += y`` と等価です。"

#: ../../library/operator.rst:447
msgid ""
"In those examples, note that when an in-place method is called, the "
"computation and assignment are performed in two separate steps.  The in-"
"place functions listed below only do the first step, calling the in-place "
"method.  The second step, assignment, is not handled."
msgstr "なお、これらの例では、インプレースメソッドが呼び出されたとき、計算と代入は二段階に分けて行われます。以下に挙げるインプレース関数は、インプレースメソッドを呼び出してその第一段階だけを行います。第二段階の代入は扱われません。"

#: ../../library/operator.rst:452
msgid ""
"For immutable targets such as strings, numbers, and tuples, the updated "
"value is computed, but not assigned back to the input variable:"
msgstr "文字列、数、タプルのようなイミュータブルなターゲットでは、更新された値が計算されますが、入力変数に代入し返されはしません。"

#: ../../library/operator.rst:461
msgid ""
"For mutable targets such as lists and dictionaries, the inplace method will "
"perform the update, so no subsequent assignment is necessary:"
msgstr "リストや辞書のようなミュータブルなターゲットでは、インプレースメソッドは更新を行うので、続く代入は必要ありません。"

#: ../../library/operator.rst:473
msgid "``a = iadd(a, b)`` is equivalent to ``a += b``."
msgstr "``a = iadd(a, b)`` は ``a += b`` と等価です。"

#: ../../library/operator.rst:479
msgid "``a = iand(a, b)`` is equivalent to ``a &= b``."
msgstr "``a = iand(a, b)`` は ``a &= b`` と等価です。"

#: ../../library/operator.rst:485
msgid ""
"``a = iconcat(a, b)`` is equivalent to ``a += b`` for *a* and *b* sequences."
msgstr "``a = iconcat(a, b)`` は二つのシーケンス *a* と *b* に対し ``a += b`` と等価です。"

#: ../../library/operator.rst:491
msgid "``a = ifloordiv(a, b)`` is equivalent to ``a //= b``."
msgstr "``a = ifloordiv(a, b)`` は ``a //= b`` と等価です。"

#: ../../library/operator.rst:497
msgid "``a = ilshift(a, b)`` is equivalent to ``a <<= b``."
msgstr "``a = ilshift(a, b)`` は ``a <<= b`` と等価です。"

#: ../../library/operator.rst:503
msgid "``a = imod(a, b)`` is equivalent to ``a %= b``."
msgstr "``a = imod(a, b)`` は ``a %= b`` と等価です。"

#: ../../library/operator.rst:509
msgid "``a = imul(a, b)`` is equivalent to ``a *= b``."
msgstr "``a = imul(a, b)`` は ``a *= b`` と等価です。"

#: ../../library/operator.rst:515
msgid "``a = imatmul(a, b)`` is equivalent to ``a @= b``."
msgstr "``a = imatmul(a, b)`` は ``a @= b`` と等価です。"

#: ../../library/operator.rst:523
msgid "``a = ior(a, b)`` is equivalent to ``a |= b``."
msgstr "``a = ior(a, b)`` は ``a |= b`` と等価です。"

#: ../../library/operator.rst:529
msgid "``a = ipow(a, b)`` is equivalent to ``a **= b``."
msgstr "``a = ipow(a, b)`` は ``a **= b`` と等価です。"

#: ../../library/operator.rst:535
msgid "``a = irshift(a, b)`` is equivalent to ``a >>= b``."
msgstr "``a = irshift(a, b)`` は ``a >>= b`` と等価です。"

#: ../../library/operator.rst:541
msgid "``a = isub(a, b)`` is equivalent to ``a -= b``."
msgstr "``a = isub(a, b)`` は ``a -= b`` と等価です。"

#: ../../library/operator.rst:547
msgid "``a = itruediv(a, b)`` is equivalent to ``a /= b``."
msgstr "``a = itruediv(a, b)`` は ``a /= b`` と等価です。"

#: ../../library/operator.rst:553
msgid "``a = ixor(a, b)`` is equivalent to ``a ^= b``."
msgstr "``a = ixor(a, b)`` は ``a ^= b`` と等価です。"
