# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# 
# Translators:
# 秘湯 <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 3.5\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2016-12-10 07:46+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-35/language/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/venv.rst:2
msgid ":mod:`venv` --- Creation of virtual environments"
msgstr ":mod:`venv` --- 仮想環境の作成"

#: ../../library/venv.rst:12
msgid "**Source code:** :source:`Lib/venv/`"
msgstr ""

#: ../../library/venv.rst:18
msgid ""
"The :mod:`venv` module provides support for creating lightweight \"virtual "
"environments\" with their own site directories, optionally isolated from "
"system site directories.  Each virtual environment has its own Python binary"
" (allowing creation of environments with various Python versions) and can "
"have its own independent set of installed Python packages in its site "
"directories."
msgstr ":mod:`venv` モジュールは、軽量な \"仮想環境\" の作成のサポートを提供します。仮想環境には、仮想環境ごとの site ディレクトリがあり、これはシステムの site ディレクトリから分離させることができます。それぞれの仮想環境には、それ自身の Python バイナリ (様々な Python バージョンで環境を作成できます) があり、仮想環境ごとの site ディレクトリに独立した Python パッケージ群をインストールできます。"

#: ../../library/venv.rst:24
msgid "See :pep:`405` for more information about Python virtual environments."
msgstr "Python仮想環境に関してより詳しくは :pep:`405` を参照してください。"

#: ../../library/venv.rst:27
msgid ""
"The ``pyvenv`` script has been deprecated as of Python 3.6 in favor of using"
" ``python3 -m venv`` to help prevent any potential confusion as to which "
"Python interpreter a virtual environment will be based on."
msgstr ""

#: ../../library/venv.rst:33
msgid "Creating virtual environments"
msgstr "仮想環境の作成"

#: ../../using/venv-create.inc:1
msgid ""
"Creation of :ref:`virtual environments <venv-def>` is done by executing the "
"``pyvenv`` script::"
msgstr "``pyvenv`` スクリプトを実行することで :ref:`virtual environments <venv-def>` を作成出来ます ::"

#: ../../using/venv-create.inc:6
msgid ""
"Running this command creates the target directory (creating any parent "
"directories that don't exist already) and places a ``pyvenv.cfg`` file in it"
" with a ``home`` key pointing to the Python installation the command was run"
" from.  It also creates a ``bin`` (or ``Scripts`` on Windows) subdirectory "
"containing a copy of the ``python`` binary (or binaries, in the case of "
"Windows).  It also creates an (initially empty) ``lib/pythonX.Y/site-"
"packages`` subdirectory (on Windows, this is ``Lib\\site-packages``)."
msgstr "このコマンドを実行すると、対象のディレクトリ (および必要なだけの存在していない親ディレクトリ) が作成され、その中に ``pyvenv.cfg`` ファイルが置かれます。そのファイルの ``home`` キーはこのコマンドを呼び出した Python のインストール場所を指します。このコマンドはまた、``python`` バイナリのコピーを含む ``bin`` サブディレクトリを作成します (Windows では、``python`` バイナリを含む ``Scripts`` サブディレクトリを作成します)。さらに、``lib/pythonX.Y/site-packages`` (Windows では ``Lib\\site-packages``) サブディレクトリも (最初は空の状態で) 作成します。"

#: ../../using/venv-create.inc:16
msgid ""
"`Python Packaging User Guide: Creating and using virtual environments "
"<https://packaging.python.org/en/latest/installing/#creating-virtual-"
"environments>`__"
msgstr "`Python Packaging User Guide: Creating and using virtual environments <https://packaging.python.org/en/latest/installing/#creating-virtual-environments>`__"

#: ../../using/venv-create.inc:21
msgid ""
"On Windows, you may have to invoke the ``pyvenv`` script as follows, if you "
"don't have the relevant PATH and PATHEXT settings::"
msgstr "Windows では、関連する PATH および PATHEXT の設定をしていない場合、以下のように ``pyvenv`` スクリプトを呼び出さなければならないかもしれません::"

#: ../../using/venv-create.inc:26
msgid "or equivalently::"
msgstr "もしくは以下でも同じです::"

#: ../../using/venv-create.inc:30
msgid "The command, if run with ``-h``, will show the available options::"
msgstr "このコマンドを ``-h`` をつけて実行すると利用できるオプションが表示されます::"

#: ../../using/venv-create.inc:56
msgid ""
"Depending on how the ``venv`` functionality has been invoked, the usage "
"message may vary slightly, e.g. referencing ``pyvenv`` rather than ``venv``."
msgstr "``venv`` 機能がどのように起動されたかによって使用法のメッセージが微妙に変わるかもしれません。例えば ``venv`` でなく ``pyvenv`` について述べるかもしれません。"

#: ../../using/venv-create.inc:59
msgid ""
"Installs pip by default, added the ``--without-pip``  and ``--copies`` "
"options"
msgstr "デフォルトで pip をインストールします。``--without-pip`` と ``--copies`` オプションを追加しました。"

#: ../../using/venv-create.inc:63
msgid ""
"In earlier versions, if the target directory already existed, an error was "
"raised, unless the ``--clear`` or ``--upgrade`` option was provided. Now, if"
" an existing directory is specified, its contents are removed and the "
"directory is processed as if it had been newly created."
msgstr "以前のバージョンでは ``--clear`` か ``--upgrade`` オプションが指定されていない限り、対象のディレクトリが既に存在していた場合はエラーを送出していました。\n現在は、既存のディレクトリが指定された場合、中身が削除されディレクトリは新規作成されたように扱われます。"

#: ../../using/venv-create.inc:69
msgid ""
"The created ``pyvenv.cfg`` file also includes the ``include-system-site-"
"packages`` key, set to ``true`` if ``venv`` is run with the ``--system-site-"
"packages`` option, ``false`` otherwise."
msgstr "作成された ``pyvenv.cfg`` ファイルには、``include-system-site-packages`` キーも含まれます。これは ``venv`` が ``--system-site-packages`` オプションをつけて実行されたなら ``true`` で、そうでなければ ``false`` です。"

#: ../../using/venv-create.inc:73
msgid ""
"Unless the ``--without-pip`` option is given, :mod:`ensurepip` will be "
"invoked to bootstrap ``pip`` into the virtual environment."
msgstr "``--without-pip`` オプションが与えられない限り、``pip`` を仮想環境でブートするために :mod:`ensurepip` が呼ばれます。"

#: ../../using/venv-create.inc:76
msgid ""
"Multiple paths can be given to ``pyvenv``, in which case an identical "
"virtualenv will be created, according to the given options, at each provided"
" path."
msgstr "``pyvenv`` に複数のパスを与えることもできます。この場合、与えられたそれぞれのパスに、与えられたオプションに従って、同様の仮想環境が作成されます。"

#: ../../using/venv-create.inc:80
msgid ""
"Once a venv has been created, it can be \"activated\" using a script in the "
"venv's binary directory. The invocation of the script is platform-specific:"
msgstr "一旦 venv が作成されれば、venv のバイナリディレクトリにあるスクリプトで \"有効化\" できます。スクリプトの呼び出しはプラットフォーム固有です:"

#: ../../using/venv-create.inc:84
msgid "Platform"
msgstr "プラットフォーム"

#: ../../using/venv-create.inc:84
msgid "Shell"
msgstr "シェル"

#: ../../using/venv-create.inc:84
msgid "Command to activate virtual environment"
msgstr "仮想環境を有効化するためのコマンド"

#: ../../using/venv-create.inc:86
msgid "Posix"
msgstr "Posix"

#: ../../using/venv-create.inc:86
msgid "bash/zsh"
msgstr "bash/zsh"

#: ../../using/venv-create.inc:86
msgid "$ source <venv>/bin/activate"
msgstr "$ source <venv>/bin/activate"

#: ../../using/venv-create.inc:88
msgid "fish"
msgstr "fish"

#: ../../using/venv-create.inc:88
msgid "$ . <venv>/bin/activate.fish"
msgstr "$ . <venv>/bin/activate.fish"

#: ../../using/venv-create.inc:90
msgid "csh/tcsh"
msgstr "csh/tcsh"

#: ../../using/venv-create.inc:90
msgid "$ source <venv>/bin/activate.csh"
msgstr "$ source <venv>/bin/activate.csh"

#: ../../using/venv-create.inc:92
msgid "Windows"
msgstr "Windows"

#: ../../using/venv-create.inc:92
msgid "cmd.exe"
msgstr "cmd.exe"

#: ../../using/venv-create.inc:92
msgid "C:\\\\> <venv>\\\\Scripts\\\\activate.bat"
msgstr "C:\\\\> <venv>\\\\Scripts\\\\activate.bat"

#: ../../using/venv-create.inc:94
msgid "PowerShell"
msgstr "PowerShell"

#: ../../using/venv-create.inc:94
msgid "PS C:\\\\> <venv>\\\\Scripts\\\\Activate.ps1"
msgstr "PS C:\\\\> <venv>\\\\Scripts\\\\Activate.ps1"

#: ../../using/venv-create.inc:97
msgid ""
"You don't specifically *need* to activate an environment; activation just "
"prepends the venv's binary directory to your path, so that \"python\" "
"invokes the venv's Python interpreter and you can run installed scripts "
"without having to use their full path. However, all scripts installed in a "
"venv should be runnable without activating it, and run with the venv's "
"Python automatically."
msgstr "環境の有効化を特別に行う *必要はありません* 。というのも有効化は venv のバイナリディレクトリを検索パスの先頭に追加するだけだからです。ですがこれにより、フルパス指定することなく \"python\" とタイプすれば Python インタプリタとして venv のものが使われます。また、フルパス指定することなく venv にインストールされたスクリプトを実行出来ます。ただしこの場合は、venv にインストールされた全てのスクリプトは有効化の有無によらず実行可能でなければならず、venv の Python が自動的に呼び出されなければなりません (---訳注: スクリプト先頭付近の shbang 行 ``#!`` で間違ったことをしていない限りは「有効化すれば」 venv の Python が、「有効化しなければ」実環境の Python が起動するはずです---)。"

#: ../../using/venv-create.inc:103
msgid ""
"You can deactivate a venv by typing \"deactivate\" in your shell. The exact "
"mechanism is platform-specific: for example, the Bash activation script "
"defines a \"deactivate\" function, whereas on Windows there are separate "
"scripts called ``deactivate.bat`` and ``Deactivate.ps1`` which are installed"
" when the venv is created."
msgstr "シェルで \"deactivate\" と入力することで、venv を無効化できます。正確な機構はプラットフォーム固有です。例えば、Bash の有効化スクリプトは \"deactivate\" 関数を定義しています。一方 Windows では、venv が作成されるときに ``deactivate.bat`` と ``Deactivate.ps1`` という別々のスクリプトがインストールされます。"

#: ../../using/venv-create.inc:109
msgid "``fish`` and ``csh`` activation scripts."
msgstr "``fish`` および ``csh`` 有効化スクリプト。"

#: ../../library/venv.rst:40
msgid ""
"A virtual environment (also called a ``venv``) is a Python environment such "
"that the Python interpreter, libraries and scripts installed into it are "
"isolated from those installed in other virtual environments, and (by "
"default) any libraries installed in a \"system\" Python, i.e. one which is "
"installed as part of your operating system."
msgstr "仮想環境 (``venv`` とも呼ばれます) は、その中にインストールされた Python インタープリタ、ライブラリ、そしてスクリプトが、他の仮想環境にインストールされたものから分離されている Python 環境です。そして、デフォルトでは、仮想環境は \"システム\" 、すなわち OS の一部としてインストールされた Python 内にインストールされた全てのライブラリからも分離されています。"

#: ../../library/venv.rst:46
msgid ""
"A venv is a directory tree which contains Python executable files and other "
"files which indicate that it is a venv."
msgstr "venv は Python 実行ファイルと、それが venv であることを示す幾つかのファイルを含んだディレクトリツリーです。"

#: ../../library/venv.rst:49
msgid ""
"Common installation tools such as ``Setuptools`` and ``pip`` work as "
"expected with venvs - i.e. when a venv is active, they install Python "
"packages into the venv without needing to be told to do so explicitly."
msgstr ""

#: ../../library/venv.rst:53
msgid ""
"When a venv is active (i.e. the venv's Python interpreter is running), the "
"attributes :attr:`sys.prefix` and :attr:`sys.exec_prefix` point to the base "
"directory of the venv, whereas :attr:`sys.base_prefix` and "
":attr:`sys.base_exec_prefix` point to the non-venv Python installation which"
" was used to create the venv. If a venv is not active, then "
":attr:`sys.prefix` is the same as :attr:`sys.base_prefix` and "
":attr:`sys.exec_prefix` is the same as :attr:`sys.base_exec_prefix` (they "
"all point to a non-venv Python installation)."
msgstr "venv が有効な場合 (venv の Python インタープリタを実行している時)、 :attr:`sys.prefix` と :attr:`sys.exec_prefix` は venv のベースディレクトリを示します。代わりに :attr:`sys.base_prefix` と :attr:`sys.base_exec_prefix` が venv を作った元の Python がインストールされている場所を示します。 venv が無効の時は、 :attr:`sys.prefix` は :attr:`sys.base_prefix` と、 :attr:`sys.exec_prefix` は :attr:`sys.base_exec_prefix` と同じになり、両方共 venv ではない Python の場所を示します。"

#: ../../library/venv.rst:62
msgid ""
"When a venv is active, any options that change the installation path will be"
" ignored from all distutils configuration files to prevent projects being "
"inadvertently installed outside of the virtual environment."
msgstr ""

#: ../../library/venv.rst:66
msgid ""
"When working in a command shell, users can make a venv active by running an "
"``activate`` script in the venv's executables directory (the precise "
"filename is shell-dependent), which prepends the venv's directory for "
"executables to the ``PATH`` environment variable for the running shell. "
"There should be no need in other circumstances to activate a venv -- scripts"
" installed into venvs have a shebang line which points to the venv's Python "
"interpreter. This means that the script will run with that interpreter "
"regardless of the value of ``PATH``. On Windows, shebang line processing is "
"supported if you have the Python Launcher for Windows installed (this was "
"added to Python in 3.3 - see :pep:`397` for more details). Thus, double-"
"clicking an installed script in a Windows Explorer window should run the "
"script with the correct interpreter without there needing to be any "
"reference to its venv in ``PATH``."
msgstr ""

#: ../../library/venv.rst:83
msgid "API"
msgstr "API"

#: ../../library/venv.rst:87
msgid ""
"The high-level method described above makes use of a simple API which "
"provides mechanisms for third-party virtual environment creators to "
"customize environment creation according to their needs, the "
":class:`EnvBuilder` class."
msgstr "上述の高水準のメソッドは、サードパーティの仮想環境クリエータが環境の作成を必要に応じてカスタマイズするための機構を提供する簡素な API を利用します。それが :class:`EnvBuilder` クラスです。"

#: ../../library/venv.rst:94
msgid ""
"The :class:`EnvBuilder` class accepts the following keyword arguments on "
"instantiation:"
msgstr ":class:`EnvBuilder` クラスを実体化するときに、以下のキーワード引数を受け取ります:"

#: ../../library/venv.rst:97
msgid ""
"``system_site_packages`` -- a Boolean value indicating that the system "
"Python site-packages should be available to the environment (defaults to "
"``False``)."
msgstr "``system_site_packages`` -- 真偽値で、システムの Python の site-packages を仮想環境から利用できるかどうかを示します (デフォルト: ``False``)。"

#: ../../library/venv.rst:100
msgid ""
"``clear`` -- a Boolean value which, if true, will delete the contents of any"
" existing target directory, before creating the environment."
msgstr "``clear`` -- 真偽値で、真の場合環境を作成する前に既存の対象ディレクトリの中身を削除します。"

#: ../../library/venv.rst:103
msgid ""
"``symlinks`` -- a Boolean value indicating whether to attempt to symlink the"
" Python binary (and any necessary DLLs or other binaries, e.g. "
"``pythonw.exe``), rather than copying. Defaults to ``True`` on Linux and "
"Unix systems, but ``False`` on Windows."
msgstr "``symlinks`` -- 真偽値で、Python のバイナリ (と必要な DLL や ``pythonw.exe`` などのバイナリ) をコピーせずにシンボリックの作成を試みるかどうかを示します。デフォルトは Linux や Unix システムでは ``True`` ですが、Windows では ``False`` です。"

#: ../../library/venv.rst:108
msgid ""
"``upgrade`` -- a Boolean value which, if true, will upgrade an existing "
"environment with the running Python - for use when that Python has been "
"upgraded in-place (defaults to ``False``)."
msgstr "``upgrade`` -- 真偽値で、真の場合実行中の Python で既存の環境をアップグレードします。その Python がインプレースでアップグレードされたときに用います。デフォルトは ``False`` です。"

#: ../../library/venv.rst:112
msgid ""
"``with_pip`` -- a Boolean value which, if true, ensures pip is installed in "
"the virtual environment. This uses :mod:`ensurepip` with the ``--default-"
"pip`` option."
msgstr "``with_pip`` -- 真偽値で、真の場合仮想環境に pip がインストールされていることを保証します。``--default-pip`` オプションで  :mod:`ensurepip` を使用します。"

#: ../../library/venv.rst:116 ../../library/venv.rst:221
msgid "Added the ``with_pip`` parameter"
msgstr "``with_pip`` 引数が追加されました。"

#: ../../library/venv.rst:120
msgid ""
"Creators of third-party virtual environment tools will be free to use the "
"provided ``EnvBuilder`` class as a base class."
msgstr "サードパーティーの仮想環境ツールのクリエータは、``EnvBuilder`` を継承して使うことができます。"

#: ../../library/venv.rst:123
msgid "The returned env-builder is an object which has a method, ``create``:"
msgstr "返される env-builder オブジェクトには ``create`` というメソッドがあります:"

#: ../../library/venv.rst:127
msgid ""
"This method takes as required argument the path (absolute or relative to the"
" current directory) of the target directory which is to contain the virtual "
"environment.  The ``create`` method will either create the environment in "
"the specified directory, or raise an appropriate exception."
msgstr "このメソッドは path (絶対パスあるいは現在のディレクトリからの相対パス) を必要な1つの引数と受け取ります。``create`` メソッドは指定されたディレクトリに仮想環境を構築するか、例外を送出します。"

#: ../../library/venv.rst:133
msgid ""
"The ``create`` method of the ``EnvBuilder`` class illustrates the hooks "
"available for subclass customization::"
msgstr "``EnvBuilder`` クラスの ``create`` メソッドは、サブクラスのカスタマイズに使えるフックを説明します::"

#: ../../library/venv.rst:148
msgid ""
"Each of the methods :meth:`ensure_directories`, "
":meth:`create_configuration`, :meth:`setup_python`, :meth:`setup_scripts` "
"and :meth:`post_setup` can be overridden."
msgstr ""

#: ../../library/venv.rst:154
msgid ""
"Creates the environment directory and all necessary directories, and returns"
" a context object.  This is just a holder for attributes (such as paths), "
"for use by the other methods. The directories are allowed to exist already, "
"as long as either ``clear`` or ``upgrade`` were specified to allow operating"
" on an existing environment directory."
msgstr ""

#: ../../library/venv.rst:162
msgid "Creates the ``pyvenv.cfg`` configuration file in the environment."
msgstr "仮想環境に ``pyvenv.cfg`` 設定ファイルを作成します。"

#: ../../library/venv.rst:166
msgid ""
"Creates a copy of the Python executable (and, under Windows, DLLs) in the "
"environment. On a POSIX system, if a specific executable ``python3.x`` was "
"used, symlinks to ``python`` and ``python3`` will be created pointing to "
"that executable, unless files with those names already exist."
msgstr ""

#: ../../library/venv.rst:174
msgid ""
"Installs activation scripts appropriate to the platform into the virtual "
"environment."
msgstr "プラットフォームに対応した有効化スクリプトを仮想環境にインストールします。"

#: ../../library/venv.rst:179
msgid ""
"A placeholder method which can be overridden in third party implementations "
"to pre-install packages in the virtual environment or perform other post-"
"creation steps."
msgstr "サードパーティーライブラリがオーバーライドするための空のメソッドです。このメソッドをオーバーライドして、仮想環境構築後にパッケージのプリインストールなどのステップを実装できます。"

#: ../../library/venv.rst:183
msgid ""
"In addition, :class:`EnvBuilder` provides this utility method that can be "
"called from :meth:`setup_scripts` or :meth:`post_setup` in subclasses to "
"assist in installing custom scripts into the virtual environment."
msgstr "これらに加えて、 :class:`EnvBuilder` は :meth:`setup_scripts` やサブクラスの :meth:`post_setup` が仮想環境にスクリプトをインストールするためのユーティリティーメソッドを提供しています。"

#: ../../library/venv.rst:189
msgid ""
"*path* is the path to a directory that should contain subdirectories "
"\"common\", \"posix\", \"nt\", each containing scripts destined for the bin "
"directory in the environment.  The contents of \"common\" and the directory "
"corresponding to :data:`os.name` are copied after some text replacement of "
"placeholders:"
msgstr "*path* は \"common\", \"posix\", \"nt\" ディレクトリを格納したディレクトリへのパスです。各サブディレクトリには仮想環境の bin ディレクトリにインストールするスクリプトを格納します。 \"common\" の中身と、 :data:`os.name` に一致するディレクトリの中身を、以下の置換処理を行いながらコピーします:"

#: ../../library/venv.rst:195
msgid ""
"``__VENV_DIR__`` is replaced with the absolute path of the environment "
"directory."
msgstr "``__VENV_DIR__`` は仮想環境ディレクトリの絶対パスに置換されます。"

#: ../../library/venv.rst:198
msgid ""
"``__VENV_NAME__`` is replaced with the environment name (final path segment "
"of environment directory)."
msgstr "``__VENV_NAME__`` は仮想環境の名前 (仮想環境ディレクトリのパスの最後の部分) に置換されます。"

#: ../../library/venv.rst:201
msgid ""
"``__VENV_PROMPT__`` is replaced with the prompt (the environment name "
"surrounded by parentheses and with a following space)"
msgstr "``__VENV_PROMPT__`` はプロンプトに置換されます (括弧で囲まれ空白が続く環境名)。"

#: ../../library/venv.rst:204
msgid ""
"``__VENV_BIN_NAME__`` is replaced with the name of the bin directory (either"
" ``bin`` or ``Scripts``)."
msgstr "``__VENV_BIN_NAME__`` は bin ディレクトリ名 (``bin`` か ``Scripts``) に置換されます。"

#: ../../library/venv.rst:207
msgid ""
"``__VENV_PYTHON__`` is replaced with the absolute path of the environment's "
"executable."
msgstr "``__VENV_PYTHON__`` は仮想環境の Python 実行ファイルの絶対パスに置換されます。"

#: ../../library/venv.rst:210
msgid ""
"The directories are allowed to exist (for when an existing environment is "
"being upgraded)."
msgstr "(既存環境のアップグレード中は) ディレクトリは存在しても構いません。"

#: ../../library/venv.rst:213
msgid "There is also a module-level convenience function:"
msgstr "モジュールレベルの簡易関数もあります:"

#: ../../library/venv.rst:218
msgid ""
"Create an :class:`EnvBuilder` with the given keyword arguments, and call its"
" :meth:`~EnvBuilder.create` method with the *env_dir* argument."
msgstr ":class:`EnvBuilder` を指定されたキーワード引数を使って作成し、その :meth:`~EnvBuilder.create` メソッドに *env_dir* 引数を渡して実行します。"

#: ../../library/venv.rst:225
msgid "An example of extending ``EnvBuilder``"
msgstr "``EnvBuilder`` を拡張する例"

#: ../../library/venv.rst:227
msgid ""
"The following script shows how to extend :class:`EnvBuilder` by implementing"
" a subclass which installs setuptools and pip into a created venv::"
msgstr "次のスクリプトは、セットアップツールと pip を作成した venv にインストールするサブクラスを実装して、:class:`EnvBuilder` を拡張する方法を示しています。"

#: ../../library/venv.rst:442
msgid ""
"This script is also available for download `online "
"<https://gist.github.com/4673395>`_."
msgstr "このスクリプトは `オンライン <https://gist.github.com/4673395>`_ でダウンロードすることも可能です。"
