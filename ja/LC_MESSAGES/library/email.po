# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# 
# Translators:
# E. Kawashima, 2016
# tomo, 2016
# 秘湯 <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 3.5\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2016-12-16 01:49+0000\n"
"Last-Translator: tomo\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc/python-35/language/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/email.rst:2
msgid ":mod:`email` --- An email and MIME handling package"
msgstr ":mod:`email` --- 電子メールと MIME 処理のためのパッケージ"

#: ../../library/email.rst:12
msgid "**Source code:** :source:`Lib/email/__init__.py`"
msgstr "**ソースコード:** :source:`Lib/email/__init__.py`"

#: ../../library/email.rst:16
msgid ""
"The :mod:`email` package is a library for managing email messages, including"
" MIME and other :rfc:`2822`\\ -based message documents.  It is specifically "
"*not* designed to do any sending of email messages to SMTP (:rfc:`2821`), "
"NNTP, or other servers; those are functions of modules such as "
":mod:`smtplib` and :mod:`nntplib`. The :mod:`email` package attempts to be "
"as RFC-compliant as possible, supporting in addition to :rfc:`2822`, such "
"MIME-related RFCs as :rfc:`2045`, :rfc:`2046`, :rfc:`2047`, and :rfc:`2231`."
msgstr ":mod:`email` は、電子メールのメッセージや MIME や他の :rfc:`2822`\\ に基づくメッセージ文書を管理するためのパッケージです。このパッケージは、SMTP (:rfc:`2821`) や NNTP、その他のサービスで電子メールを送信するように設計されて *いません*。それらは :mod:`smtplib` や :mod:`nntplib` のようなモジュールの機能です。パッケージ :mod:`email` は :rfc:`2822` だけでなく、MIME 関連の RFC (:rfc:`2045`、 :rfc:`2046`、 :rfc:`2047`、 :rfc:`2231`.) にできる限り RFC に準拠するように作られています。"

#: ../../library/email.rst:24
msgid ""
"The primary distinguishing feature of the :mod:`email` package is that it "
"splits the parsing and generating of email messages from the internal "
"*object model* representation of email.  Applications using the :mod:`email`"
" package deal primarily with objects; you can add sub-objects to messages, "
"remove sub-objects from messages, completely re-arrange the contents, etc.  "
"There is a separate parser and a separate generator which handles the "
"transformation from flat text to the object model, and then back to flat "
"text again.  There are also handy subclasses for some common MIME object "
"types, and a few miscellaneous utilities that help with such common tasks as"
" extracting and parsing message field values, creating RFC-compliant dates, "
"etc."
msgstr ":mod:`email` パッケージの一番の特徴は、電子メールの内部表現である *オブジェクトモデル* と、電子メールメッセージの解析および生成とを分離していることです。 :mod:`email` パッケージを使うアプリケーションは基本的にはオブジェクトを処理することができます。メッセージに子オブジェクトを追加したり、メッセージから子オブジェクトを削除したり、内容を完全に並べかえたり、といったことができます。フラットなテキスト文書からオブジェクトモデルへの変換、またそこからフラットな文書へと戻す変換はそれぞれ別々の解析器 (パーサ) と生成器 (ジェネレータ) が担当しています。また、一般的な MIME オブジェクトタイプのいくつかについては手軽なサブクラスが存在しており、メッセージフィールド値を抽出したり解析したり、 RFC 準拠の日付を生成したりなどのよくおこわれるタスクについてはいくつかの雑用ユーティリティもついています。"

#: ../../library/email.rst:35
msgid ""
"The following sections describe the functionality of the :mod:`email` "
"package. The ordering follows a progression that should be common in "
"applications: an email message is read as flat text from a file or other "
"source, the text is parsed to produce the object structure of the email "
"message, this structure is manipulated, and finally, the object tree is "
"rendered back into flat text."
msgstr "以下の節では :mod:`email` パッケージの機能を説明します。説明の順序は多くのアプリケーションで一般的な使用順序にもとづいています。まず、電子メールメッセージをファイルあるいはその他のソースからフラットなテキスト文書として読み込み、つぎにそのテキストを解析して電子メールのオブジェクト構造を作成し、その構造を操作して、最後にオブジェクトツリーをフラットなテキストに戻す、という順序になっています。"

#: ../../library/email.rst:41
msgid ""
"It is perfectly feasible to create the object structure out of whole cloth "
"--- i.e. completely from scratch.  From there, a similar progression can be "
"taken as above."
msgstr "このオブジェクト構造は、まったくのゼロから作りだしたものであってもいっこうにかまいません。この場合も上と似たような作業順序になるでしょう。"

#: ../../library/email.rst:45
msgid ""
"Also included are detailed specifications of all the classes and modules "
"that the :mod:`email` package provides, the exception classes you might "
"encounter while using the :mod:`email` package, some auxiliary utilities, "
"and a few examples.  For users of the older :mod:`mimelib` package, or "
"previous versions of the :mod:`email` package, a section on differences and "
"porting is provided."
msgstr "またここには :mod:`email` パッケージが提供するすべてのクラスおよびモジュールに関する説明と、 :mod:`email` パッケージを使っていくうえで遭遇するかもしれない例外クラス、いくつかの補助ユーティリティ、そして少々のサンプルも含まれています。古い :mod:`mimelib` や前バージョンの :mod:`email` パッケージのユーザのために、現行バージョンとの違いと移植についての節も設けてあります。"

#: ../../library/email.rst:51
msgid "Contents of the :mod:`email` package documentation:"
msgstr ":mod:`email` パッケージ文書の内容"

#: ../../library/email.rst:74
msgid "Module :mod:`smtplib`"
msgstr ":mod:`smtplib` モジュール"

#: ../../library/email.rst:74
msgid "SMTP protocol client"
msgstr "SMTP プロトコルクライアント"

#: ../../library/email.rst:76
msgid "Module :mod:`nntplib`"
msgstr ":mod:`nntplib` モジュール"

#: ../../library/email.rst:77
msgid "NNTP protocol client"
msgstr "NNTP プロトコルクライアント"

#: ../../library/email.rst:83
msgid "Package History"
msgstr "パッケージの履歴"

#: ../../library/email.rst:85
msgid ""
"This table describes the release history of the email package, corresponding"
" to the version of Python that the package was released with.  For purposes "
"of this document, when you see a note about change or added versions, these "
"refer to the Python version the change was made in, *not* the email package "
"version.  This table also describes the Python compatibility of each version"
" of the package."
msgstr "このテーブルは email パッケージのリリース履歴を表しています。それぞれのバージョンと、それが同梱された Python のバージョンとの関連が示されています。このドキュメントでの、追加/変更されたバージョンの表記は email パッケージのバージョン *ではなく*、Pythonのバージョンです。このテーブルは Python の各バージョン間の email パッケージの互換性も示しています。"

#: ../../library/email.rst:92
msgid "email version"
msgstr "email バージョン"

#: ../../library/email.rst:92
msgid "distributed with"
msgstr "配布"

#: ../../library/email.rst:92
msgid "compatible with"
msgstr "互換"

#: ../../library/email.rst:94
msgid ":const:`1.x`"
msgstr ":const:`1.x`"

#: ../../library/email.rst:94
msgid "Python 2.2.0 to Python 2.2.1"
msgstr "Python 2.2.0 から Python 2.2.1 まで"

#: ../../library/email.rst:94
msgid "*no longer supported*"
msgstr "*もうサポートされません*"

#: ../../library/email.rst:96
msgid ":const:`2.5`"
msgstr ":const:`2.5`"

#: ../../library/email.rst:96
msgid "Python 2.2.2+ and Python 2.3"
msgstr "Python 2.2.2+ と Python 2.3"

#: ../../library/email.rst:96
msgid "Python 2.1 to 2.5"
msgstr "Python 2.1 から 2.5 まで"

#: ../../library/email.rst:98
msgid ":const:`3.0`"
msgstr ":const:`3.0`"

#: ../../library/email.rst:98
msgid "Python 2.4 and Python 2.5"
msgstr "Python 2.4 と Python 2.5"

#: ../../library/email.rst:98
msgid "Python 2.3 to 2.6"
msgstr "Python 2.3 から 2.6"

#: ../../library/email.rst:100
msgid ":const:`4.0`"
msgstr ":const:`4.0`"

#: ../../library/email.rst:100
msgid "Python 2.5 to Python 2.7"
msgstr "Python 2.5 から Python 2.7"

#: ../../library/email.rst:100
msgid "Python 2.3 to 2.7"
msgstr "Python 2.3 から 2.7"

#: ../../library/email.rst:102
msgid ":const:`5.0`"
msgstr ":const:`5.0`"

#: ../../library/email.rst:102
msgid "Python 3.0 and Python 3.1"
msgstr "Python 3.0 と Python 3.1"

#: ../../library/email.rst:102
msgid "Python 3.0 to 3.2"
msgstr "Python 3.0 から 3.2 まで"

#: ../../library/email.rst:104
msgid ":const:`5.1`"
msgstr ":const:`5.1`"

#: ../../library/email.rst:104 ../../library/email.rst:104
msgid "Python 3.2"
msgstr "Python 3.2"

#: ../../library/email.rst:107
msgid ""
"After Version 5.1 (Python 3.2), the email package no longer has a version "
"that is separate from the Python version.  (See the :ref:`whatsnew-index` "
"documents for the respective Python versions for details on changes.)"
msgstr "バージョン 5.1 (Python 3.2) 以降は、 Python バージョンとは別の email パッケージのバージョンを持たなくなりました。\n(変更の詳細については、それぞれの Python バージョンの :ref:`whatsnew-index` ドキュメントを参照してください。)"

#: ../../library/email.rst:111
msgid ""
"Here are the major differences between :mod:`email` version 5.1 and version "
"5.0:"
msgstr ":mod:`email` のバージョン 5.1 と 5.0 の大きな違いは以下の通りです:"

#: ../../library/email.rst:114
msgid ""
"It is once again possible to parse messages containing non-ASCII bytes, and "
"to reproduce such messages if the data containing the non-ASCII bytes is not"
" modified."
msgstr "ふたたび、非 ASCII のバイトを含んでるメッセージをパースできるようになり、非 ASCII のバイトを含んでるデータが変更されていなければメッセージを復元できるようになりました。"

#: ../../library/email.rst:118
msgid ""
"New functions :func:`message_from_bytes` and "
":func:`message_from_binary_file`, and new classes "
":class:`~email.parser.BytesFeedParser` and "
":class:`~email.parser.BytesParser` allow binary message data to be parsed "
"into model objects."
msgstr "新しい関数 :func:`message_from_bytes`, :func:`message_from_binary_file` 、および新しいクラス :class:`~email.parser.BytesFeedParser`, :class:`~email.parser.BytesParser` で、バイナリメッセージデータをパースしてモデルオブジェクトに変換できるようになりました。"

#: ../../library/email.rst:123
msgid ""
"Given bytes input to the model, :meth:`~email.message.Message.get_payload` "
"will by default decode a message body that has a :mailheader:`Content-"
"Transfer-Encoding` of ``8bit`` using the charset specified in the MIME "
"headers and return the resulting string."
msgstr "モデルへの入力として bytes が与えられると、 :meth:`~email.message.Message.get_payload` は、デフォルトでは ``8 ビット`` の :mailheader:`Content-Transfer-Encoding` MIME ヘッダを持つメッセージボディを、その MIME ヘッダで指定された文字セットを使ってデコードした結果の文字列を返します。"

#: ../../library/email.rst:128
msgid ""
"Given bytes input to the model, :class:`~email.generator.Generator` will "
"convert message bodies that have a :mailheader:`Content-Transfer-Encoding` "
"of 8bit to instead have a 7bit Content-Transfer-Encoding."
msgstr "モデルへの入力として bytes が与えられると、 :class:`~email.generator.Generator` は、 8 ビット の :mailheader:`Content-Transfer-Encoding` MIME ヘッダをもったメッセージボディを、 7 ビットの Content-Transfer-Encoding を持つものに変換します。"

#: ../../library/email.rst:132
msgid ""
"New class :class:`~email.generator.BytesGenerator` produces bytes as output,"
" preserving any unchanged non-ASCII data that was present in the input used "
"to build the model, including message bodies with a :mailheader:`Content-"
"Transfer-Encoding` of 8bit."
msgstr "新しいクラス :class:`~email.generator.BytesGenerator` は出力としてバイト列を生成します。\nこれはモデルを構築するのに使った入力に含まれていた非 ASCII データに変更を加えずにし、メッセージボディに 8ビットの :mailheader:`Content-Transfer-Encoding` を持たせます。"

#: ../../library/email.rst:137
msgid ""
"Here are the major differences between :mod:`email` version 5.0 and version "
"4:"
msgstr ":mod:`email` のバージョン 5.0 と 4 の大きな違いは以下の通りです:"

#: ../../library/email.rst:139
msgid ""
"All operations are on unicode strings.  Text inputs must be strings, text "
"outputs are strings.  Outputs are limited to the ASCII character set and so "
"can be encoded to ASCII for transmission.  Inputs are also limited to ASCII;"
" this is an acknowledged limitation of email 5.0 and means it can only be "
"used to parse email that is 7bit clean."
msgstr "全ての処理が Unicode 文字列で行われるようになりました。\n入力テキストは文字列でなければならず、出力テキストも文字列です。\n出力は ASCII 文字列集合に限定されているので、送信のために ASCII にエンコードできます。\n入力も ASCII に制限されています;\nこれは email 5.0 の既知の制限で、7ビット文字しか使われていない電子メールのパースにしか使えないということになります。"

#: ../../library/email.rst:145
msgid ""
"Here are the major differences between :mod:`email` version 4 and version 3:"
msgstr ":mod:`email` のバージョン 4 と 3 の大きな違いは以下の通りです:"

#: ../../library/email.rst:147
msgid ""
"All modules have been renamed according to :pep:`8` standards.  For example,"
" the version 3 module :mod:`email.Message` was renamed to "
":mod:`email.message` in version 4."
msgstr "全モジュールが :pep:`8` 標準にあわせてリネームされました。たとえば、version 3 でのモジュール :mod:`email.Message` は version 4 では :mod:`email.message` になりました。"

#: ../../library/email.rst:151
msgid ""
"A new subpackage :mod:`email.mime` was added and all the version 3 "
":mod:`email.MIME\\*` modules were renamed and situated into the "
":mod:`email.mime` subpackage.  For example, the version 3 module "
":mod:`email.MIMEText` was renamed to :mod:`email.mime.text`."
msgstr "新しいサブパッケージ :mod:`email.mime` が追加され、 version 3 の :mod:`email.MIME\\*` は、 :mod:`email.mime` のサブパッケージにまとめられました。たとえば、version 3 での :mod:`email.MIMEText` は、 :mod:`email.mime.text` になりました。"

#: ../../library/email.rst:156
msgid ""
"*Note that the version 3 names will continue to work until Python 2.6*."
msgstr "*Python 2.6までは version 3 の名前も有効です*。"

#: ../../library/email.rst:158
msgid ""
"The :mod:`email.mime.application` module was added, which contains the "
":class:`~email.mime.application.MIMEApplication` class."
msgstr ":mod:`email.mime.application` モジュールが追加されました。これは :class:`~email.mime.application.MIMEApplication` クラスを含んでいます。"

#: ../../library/email.rst:161
msgid ""
"Methods that were deprecated in version 3 have been removed.  These include "
":meth:`Generator.__call__`, :meth:`Message.get_type`, "
":meth:`Message.get_main_type`, :meth:`Message.get_subtype`."
msgstr "version 3 で推奨されないとされた機能は削除されました。これらは :meth:`Generator.__call__`, :meth:`Message.get_type`, :meth:`Message.get_main_type`, :meth:`Message.get_subtype` を含みます。"

#: ../../library/email.rst:165
msgid ""
"Fixes have been added for :rfc:`2231` support which can change some of the "
"return types for :func:`Message.get_param <email.message.Message.get_param>`"
" and friends.  Under some circumstances, values which used to return a "
"3-tuple now return simple strings (specifically, if all extended parameter "
"segments were unencoded, there is no language and charset designation "
"expected, so the return type is now a simple string).  Also, %-decoding used"
" to be done for both encoded and unencoded segments; this decoding is now "
"done only for encoded segments."
msgstr ":rfc:`2231` サポートの修正が追加されました。これは :func:`Message.get_param <email.message.Message.get_param>` などの関数の返り値を変更します。いくつかの環境では、3 つ組のタプルで返されていた値が 1 つの文字列で返されます (とくに、全ての拡張パラメータセグメントがエンコードされていなかった場合、予測されていた language や charset の指定がないと、返り値は単純な文字列になります)。過去の版では % デコードがエンコードされているセグメントおよびエンコードされていないセグメントに対して行われましたが、エンコードされたセグメントのみで行われるようになりました。"

#: ../../library/email.rst:174
msgid ""
"Here are the major differences between :mod:`email` version 3 and version 2:"
msgstr ":mod:`email` のバージョン 3 と 2 の大きな違いは以下の通りです:"

#: ../../library/email.rst:176
msgid ""
"The :class:`~email.parser.FeedParser` class was introduced, and the "
":class:`~email.parser.Parser` class was implemented in terms of the "
":class:`~email.parser.FeedParser`.  All parsing therefore is non-strict, and"
" parsing will make a best effort never to raise an exception. Problems found"
" while parsing messages are stored in the message's *defect* attribute."
msgstr ":class:`~email.parser.FeedParser` クラスが新しく導入され、 :class:`~email.parser.Parser` クラスは :class:`~email.parser.FeedParser` を使って実装されるようになりました。このパーザは non-strict なものであり、解析はベストエフォート方式でおこなわれ解析中に例外を発生させることはありません。解析中に発見された問題はそのメッセージの *defect* (障害) 属性に保存されます。"

#: ../../library/email.rst:183
msgid ""
"All aspects of the API which raised :exc:`DeprecationWarning`\\ s in version"
" 2 have been removed.  These include the *_encoder* argument to the "
":class:`~email.mime.text.MIMEText` constructor, the "
":meth:`Message.add_payload` method, the :func:`Utils.dump_address_pair` "
"function, and the functions :func:`Utils.decode` and :func:`Utils.encode`."
msgstr "バージョン 2 で :exc:`DeprecationWarning` を発生していた API はすべて削除されました。以下のものが含まれています: :class:`~email.mime.text.MIMEText` コンストラクタに渡す引数 *_encoder* 、 :meth:`Message.add_payload` メソッド、 :func:`Utils.dump_address_pair` 関数、そして :func:`Utils.decode` と :func:`Utils.encode` です。"

#: ../../library/email.rst:189
msgid ""
"New :exc:`DeprecationWarning`\\ s have been added to: "
":meth:`Generator.__call__`, :meth:`Message.get_type`, "
":meth:`Message.get_main_type`, :meth:`Message.get_subtype`, and the *strict*"
" argument to the :class:`~email.parser.Parser` class.  These are expected to"
" be removed in future versions."
msgstr "新しく以下の関数が :exc:`DeprecationWarning` を発生するようになりました: :meth:`Generator.__call__`, :meth:`Message.get_type`, :meth:`Message.get_main_type`, :meth:`Message.get_subtype`, そして :class:`~email.parser.Parser` クラスに対する *strict* 引数です。これらは email の将来のバージョンで撤廃される予定です。"

#: ../../library/email.rst:195
msgid "Support for Pythons earlier than 2.3 has been removed."
msgstr "Python 2.3 以前はサポートされなくなりました。"

#: ../../library/email.rst:197
msgid "Here are the differences between :mod:`email` version 2 and version 1:"
msgstr ":mod:`email` バージョン 2 とバージョン 1 との違いは以下のようなものです:"

#: ../../library/email.rst:199
msgid ""
"The :mod:`email.Header` and :mod:`email.Charset` modules have been added."
msgstr ":mod:`email.Header` モジュールおよび :mod:`email.Charset` モジュールが追加されています。"

#: ../../library/email.rst:201
msgid ""
"The pickle format for :class:`~email.message.Message` instances has changed."
" Since this was never (and still isn't) formally defined, this isn't "
"considered a backward incompatibility.  However if your application pickles "
"and unpickles :class:`~email.message.Message` instances, be aware that in "
":mod:`email` version 2, :class:`~email.message.Message` instances now have "
"private variables *_charset* and *_default_type*."
msgstr ":class:`~email.message.Message` インスタンスの Pickle 形式が変わりました。が、これは正式に定義されたことは一度もないので (そしてこれからも)、この変更は互換性の欠如とはみなされていません。ですがもしお使いのアプリケーションが :class:`~email.message.Message` インスタンスを pickle あるいは unpickle しているなら、現在 :mod:`email` バージョン 2 では :class:`~email.message.Message` インスタンスがプライベート変数 *_charset* および *_default_type* を含むようになったということに注意してください。"

#: ../../library/email.rst:208
msgid ""
"Several methods in the :class:`~email.message.Message` class have been "
"deprecated, or their signatures changed.  Also, many new methods have been "
"added.  See the documentation for the :class:`~email.message.Message` class "
"for details.  The changes should be completely backward compatible."
msgstr ":class:`~email.message.Message` クラス中のいくつかのメソッドは推奨されなくなったか、あるいは呼び出し形式が変更になっています。また、多くの新しいメソッドが追加されています。詳しくは :class:`~email.message.Message` クラスの文書を参照してください。これらの変更は完全に下位互換になっているはずです。"

#: ../../library/email.rst:213
msgid ""
"The object structure has changed in the face of :mimetype:`message/rfc822` "
"content types.  In :mod:`email` version 1, such a type would be represented "
"by a scalar payload, i.e. the container message's "
":meth:`~email.message.Message.is_multipart` returned false, "
":meth:`~email.message.Message.get_payload` was not a list object, but a "
"single :class:`~email.message.Message` instance."
msgstr ":mimetype:`message/rfc822` 形式のコンテナは、見た目上のオブジェクト構造が変わりました。 :mod:`email` バージョン 1 ではこの content type はスカラー形式のペイロードとして表現されていました。つまり、コンテナメッセージの :meth:`~email.message.Message.is_multipart` は false を返し、 :meth:`~email.message.Message.get_payload` はリストオブジェクトではなく単一の :class:`~email.message.Message` インスタンスを直接返すようになっていたのです。"

#: ../../library/email.rst:220
msgid ""
"This structure was inconsistent with the rest of the package, so the object "
"representation for :mimetype:`message/rfc822` content types was changed.  In"
" :mod:`email` version 2, the container *does* return ``True`` from "
":meth:`~email.message.Message.is_multipart`, and "
":meth:`~email.message.Message.get_payload` returns a list containing a "
"single :class:`~email.message.Message` item."
msgstr "この構造はパッケージ中のほかの部分と整合がとれていなかったため、 :mimetype:`message/rfc822` 形式のオブジェクト表現形式が変更されました。 :mod:`email` バージョン 2 では、コンテナは :meth:`~email.message.Message.is_multipart` で ``True`` を *返します* 。また :meth:`~email.message.Message.get_payload` はひとつの :class:`~email.message.Message` インスタンスを要素とするリストを返すようになりました。"

#: ../../library/email.rst:227
msgid ""
"Note that this is one place that backward compatibility could not be "
"completely maintained.  However, if you're already testing the return type "
"of :meth:`~email.message.Message.get_payload`, you should be fine.  You just"
" need to make sure your code doesn't do a "
":meth:`~email.message.Message.set_payload` with a "
":class:`~email.message.Message` instance on a container with a content type "
"of :mimetype:`message/rfc822`."
msgstr "注意: ここは下位互換が完全には成りたたなくなっている部分のひとつです。けれどもあらかじめ :meth:`~email.message.Message.get_payload` が返すタイプをチェックするようになっていれば問題にはなりません。ただ :mimetype:`message/rfc822` 形式のコンテナを :class:`~email.message.Message` インスタンスにじかに :meth:`~email.message.Message.set_payload` しないようにさえすればよいのです。"

#: ../../library/email.rst:234
msgid ""
"The :class:`~email.parser.Parser` constructor's *strict* argument was added,"
" and its :meth:`~email.parser.Parser.parse` and "
":meth:`~email.parser.Parser.parsestr` methods grew a *headersonly* argument."
" The *strict* flag was also added to functions "
":func:`email.message_from_file` and :func:`email.message_from_string`."
msgstr ":class:`~email.parser.Parser` コンストラクタに *strict* 引数が追加され、 :meth:`~email.parser.Parser.parse` および :meth:`~email.parser.Parser.parsestr` メソッドには *headersonly* 引数がつきました。 *strict* フラグはまた :func:`email.message_from_file` と :func:`email.message_from_string` にも追加されています。"

#: ../../library/email.rst:240
msgid ""
":meth:`Generator.__call__` is deprecated; use :meth:`Generator.flatten "
"<email.generator.Generator.flatten>` instead.  The "
":class:`~email.generator.Generator` class has also grown the "
":meth:`~email.generator.Generator.clone` method."
msgstr ":meth:`Generator.__call__` はもはや推奨されなくなりました。かわりに :meth:`Generator.flatten <email.generator.Generator.flatten>` を使ってください。また、 :class:`~email.generator.Generator` クラスには :meth:`~email.generator.Generator.clone` メソッドが追加されています。"

#: ../../library/email.rst:245
msgid ""
"The :class:`~email.generator.DecodedGenerator` class in the "
":mod:`email.generator` module was added."
msgstr ":mod:`email.generator` モジュールに :class:`~email.generator.DecodedGenerator` クラスが加わりました。"

#: ../../library/email.rst:248
msgid ""
"The intermediate base classes "
":class:`~email.mime.nonmultipart.MIMENonMultipart` and "
":class:`~email.mime.multipart.MIMEMultipart` have been added, and interposed"
" in the class hierarchy for most of the other MIME-related derived classes."
msgstr "中間的な基底クラスである :class:`~email.mime.nonmultipart.MIMENonMultipart` および :class:`~email.mime.multipart.MIMEMultipart` がクラス階層の中に追加され、ほとんどの MIME 関係の派生クラスがこれを介するようになっています。"

#: ../../library/email.rst:253
msgid ""
"The *_encoder* argument to the :class:`~email.mime.text.MIMEText` "
"constructor has been deprecated.  Encoding  now happens implicitly based on "
"the *_charset* argument."
msgstr ":class:`~email.mime.text.MIMEText` コンストラクタの *_encoder* 引数は推奨されなくなりました。いまやエンコーダは *_charset* 引数にもとづいて暗黙のうちに決定されます。"

#: ../../library/email.rst:257
msgid ""
"The following functions in the :mod:`email.Utils` module have been "
"deprecated: :func:`dump_address_pairs`, :func:`decode`, and :func:`encode`."
"  The following functions have been added to the module: :func:`make_msgid`,"
" :func:`decode_rfc2231`, :func:`encode_rfc2231`, and :func:`decode_params`."
msgstr ":mod:`email.utils` モジュールにおける以下の関数は推奨されなくなりました: :func:`dump_address_pairs`, :func:`decode`, および :func:`encode` 。また、このモジュールには以下の関数が追加されています: :func:`make_msgid`, :func:`decode_rfc2231`, :func:`encode_rfc2231` そして :func:`decode_params` 。"

#: ../../library/email.rst:262
msgid "The non-public function :func:`email.Iterators._structure` was added."
msgstr "Public ではない関数 :func:`email.iterators._structure` が追加されました。"

#: ../../library/email.rst:266
msgid "Differences from :mod:`mimelib`"
msgstr ":mod:`mimelib` との違い"

#: ../../library/email.rst:268
msgid ""
"The :mod:`email` package was originally prototyped as a separate library "
"called `mimelib <http://mimelib.sourceforge.net/>`_. Changes have been made "
"so that method names are more consistent, and some methods or modules have "
"either been added or removed.  The semantics of some of the methods have "
"also changed.  For the most part, any functionality available in "
":mod:`mimelib` is still available in the :mod:`email` package, albeit often "
"in a different way.  Backward compatibility between the :mod:`mimelib` "
"package and the :mod:`email` package was not a priority."
msgstr ":mod:`email` パッケージはもともと `mimelib <http://mimelib.sourceforge.net/>`_ と呼ばれる個別のライブラリからつくられたものです。その後変更が加えられ、メソッド名がより一貫したものになり、いくつかのメソッドやモジュールが加えられたりはずされたりしました。いくつかのメソッドでは、その意味も変更されています。しかしほとんどの部分において、 :mod:`mimelib` パッケージで使うことのできた機能は、ときどきその方法が変わってはいるものの :mod:`email` パッケージでも使用可能です。 :mod:`mimelib` パッケージと :mod:`email` パッケージの間の下位互換性はあまり優先はされませんでした。"

#: ../../library/email.rst:277
msgid ""
"Here is a brief description of the differences between the :mod:`mimelib` "
"and the :mod:`email` packages, along with hints on how to port your "
"applications."
msgstr "以下では :mod:`mimelib` パッケージと :mod:`email` パッケージにおける違いを簡単に説明し、それに沿ってアプリケーションを移植するさいの指針を述べています。"

#: ../../library/email.rst:280
msgid ""
"Of course, the most visible difference between the two packages is that the "
"package name has been changed to :mod:`email`.  In addition, the top-level "
"package has the following differences:"
msgstr "おそらく 2つのパッケージのもっとも明らかな違いは、パッケージ名が :mod:`email` に変更されたことでしょう。さらにトップレベルのパッケージが以下のように変更されました:"

#: ../../library/email.rst:284
msgid ""
":func:`messageFromString` has been renamed to :func:`message_from_string`."
msgstr ":func:`messageFromString` は :func:`message_from_string` に名前が変更されました。"

#: ../../library/email.rst:286
msgid ":func:`messageFromFile` has been renamed to :func:`message_from_file`."
msgstr ":func:`messageFromFile` は :func:`message_from_file` に名前が変更されました。"

#: ../../library/email.rst:288
msgid ""
"The :class:`~email.message.Message` class has the following differences:"
msgstr ":class:`~email.message.Message` クラスでは、以下のような違いがあります:"

#: ../../library/email.rst:290
msgid ""
"The method :meth:`asString` was renamed to "
":meth:`~email.message.Message.as_string`."
msgstr ":meth:`asString` メソッドは :meth:`~email.message.Message.as_string` に名前が変更されました。"

#: ../../library/email.rst:293
msgid ""
"The method :meth:`ismultipart` was renamed to "
":meth:`~email.message.Message.is_multipart`."
msgstr ":meth:`ismultipart` メソッドは :meth:`~email.message.Message.is_multipart` に名前が変更されました。"

#: ../../library/email.rst:296
msgid ""
"The :meth:`~email.message.Message.get_payload` method has grown a *decode* "
"optional argument."
msgstr ":meth:`~email.message.Message.get_payload` メソッドはオプション引数として *decode* をとるようになりました。"

#: ../../library/email.rst:299
msgid ""
"The method :meth:`getall` was renamed to "
":meth:`~email.message.Message.get_all`."
msgstr ":meth:`getall` メソッドは :meth:`~email.message.Message.get_all` に名前が変更されました。"

#: ../../library/email.rst:302
msgid ""
"The method :meth:`addheader` was renamed to "
":meth:`~email.message.Message.add_header`."
msgstr ":meth:`addheader` メソッドは :meth:`~email.message.Message.add_header` に名前が変更されました。"

#: ../../library/email.rst:305
msgid "The method :meth:`gettype` was renamed to :meth:`get_type`."
msgstr ":meth:`gettype` メソッドは :meth:`get_type` に名前が変更されました。"

#: ../../library/email.rst:307
msgid "The method :meth:`getmaintype` was renamed to :meth:`get_main_type`."
msgstr ":meth:`getmaintype` メソッドは :meth:`get_main_type` に名前が変更されました。"

#: ../../library/email.rst:309
msgid "The method :meth:`getsubtype` was renamed to :meth:`get_subtype`."
msgstr ":meth:`getsubtype` メソッドは :meth:`get_subtype` に名前が変更されました。"

#: ../../library/email.rst:311
msgid ""
"The method :meth:`getparams` was renamed to "
":meth:`~email.message.Message.get_params`. Also, whereas :meth:`getparams` "
"returned a list of strings, :meth:`~email.message.Message.get_params` "
"returns a list of 2-tuples, effectively the key/value pairs of the "
"parameters, split on the ``'='`` sign."
msgstr ":meth:`getparams` メソッドは :meth:`~email.message.Message.get_params` に名前が変更されました。また、従来の :meth:`getparams` は文字列のリストを返していましたが、 :meth:`~email.message.Message.get_params` は 2-タプルのリストを返すようになっています。これはそのパラメータのキーと値の組が、 ``'='`` 記号によって分離されたものです。"

#: ../../library/email.rst:317
msgid ""
"The method :meth:`getparam` was renamed to "
":meth:`~email.message.Message.get_param`."
msgstr ":meth:`getparam` メソッドは :meth:`~email.message.Message.get_param` に名前が変更されました。"

#: ../../library/email.rst:320
msgid ""
"The method :meth:`getcharsets` was renamed to "
":meth:`~email.message.Message.get_charsets`."
msgstr ":meth:`getcharsets` メソッドは :meth:`~email.message.Message.get_charsets` に名前が変更されました。"

#: ../../library/email.rst:323
msgid ""
"The method :meth:`getfilename` was renamed to "
":meth:`~email.message.Message.get_filename`."
msgstr ":meth:`getfilename` メソッドは :meth:`~email.message.Message.get_filename` に名前が変更されました。"

#: ../../library/email.rst:326
msgid ""
"The method :meth:`getboundary` was renamed to "
":meth:`~email.message.Message.get_boundary`."
msgstr ":meth:`getboundary` は :meth:`~email.message.Message.get_boundary` に名前が変更されました。"

#: ../../library/email.rst:329
msgid ""
"The method :meth:`setboundary` was renamed to "
":meth:`~email.message.Message.set_boundary`."
msgstr ":meth:`setboundary` メソッドは :meth:`~email.message.Message.set_boundary` に名前が変更されました。"

#: ../../library/email.rst:332
msgid ""
"The method :meth:`getdecodedpayload` was removed.  To get similar "
"functionality, pass the value 1 to the *decode* flag of the "
":meth:`~email.message.Message.get_payload` method."
msgstr ":meth:`getdecodedpayload` メソッドは廃止されました。これと同様の機能は :meth:`~email.message.Message.get_payload` メソッドの *decode* フラグに 1 を渡すことで実現できます。"

#: ../../library/email.rst:336
msgid ""
"The method :meth:`getpayloadastext` was removed.  Similar functionality is "
"supported by the :class:`~email.generator.DecodedGenerator` class in the "
":mod:`email.generator` module."
msgstr ":meth:`getpayloadastext` メソッドは廃止されました。これと同様の機能は :mod:`email.generator` モジュールの :class:`~email.generator.DecodedGenerator` クラスによって提供されます。"

#: ../../library/email.rst:340
msgid ""
"The method :meth:`getbodyastext` was removed.  You can get similar "
"functionality by creating an iterator with "
":func:`~email.iterators.typed_subpart_iterator` in the "
":mod:`email.iterators` module."
msgstr ":meth:`getbodyastext` メソッドは廃止されました。これと同様の機能は :mod:`email.iterators` モジュールにある :func:`~email.iterators.typed_subpart_iterator` を使ってイテレータを作ることにより実現できます。"

#: ../../library/email.rst:345
msgid ""
"The :class:`~email.parser.Parser` class has no differences in its public "
"interface. It does have some additional smarts to recognize "
":mimetype:`message/delivery-status` type messages, which it represents as a "
":class:`~email.message.Message` instance containing separate "
":class:`~email.message.Message` subparts for each header block in the "
"delivery status notification [#]_."
msgstr ":class:`~email.parser.Parser` クラスは、その public なインターフェイスは変わっていませんが、これはより一層かしこくなって :mimetype:`message/delivery-status` 形式のメッセージを認識するようになりました。これは配送状態通知 [#]_ において、各ヘッダブロックを表す独立した :class:`~email.message.Message` サブパートを含むひとつの :class:`~email.message.Message` インスタンスとして表現されます。"

#: ../../library/email.rst:352
msgid ""
"The :class:`~email.generator.Generator` class has no differences in its "
"public interface.  There is a new class in the :mod:`email.generator` module"
" though, called :class:`~email.generator.DecodedGenerator` which provides "
"most of the functionality previously available in the "
":meth:`Message.getpayloadastext` method."
msgstr ":class:`~email.generator.Generator` クラスは、その public なインターフェイスは変わっていませんが、 :mod:`email.generator` モジュールに新しいクラスが加わりました。 :class:`~email.generator.DecodedGenerator` と呼ばれるこのクラスは以前 :meth:`Message.getpayloadastext` メソッドで使われていた機能のほとんどを提供します。"

#: ../../library/email.rst:358
msgid "The following modules and classes have been changed:"
msgstr "また、以下のモジュールおよびクラスが変更されています:"

#: ../../library/email.rst:360
msgid ""
"The :class:`~email.mime.base.MIMEBase` class constructor arguments *_major* "
"and *_minor* have changed to *_maintype* and *_subtype* respectively."
msgstr ":class:`~email.mime.base.MIMEBase` クラスのコンストラクタ引数 *_major* と *_minor* は、それぞれ *_maintype* と *_subtype* に変更されています。"

#: ../../library/email.rst:363
msgid ""
"The ``Image`` class/module has been renamed to ``MIMEImage``.  The *_minor* "
"argument has been renamed to *_subtype*."
msgstr "``Image`` クラスおよびモジュールは ``MIMEImage`` に名前が変更されました。*_minor* 引数も *_subtype* に名前が変更されています。"

#: ../../library/email.rst:366
msgid ""
"The ``Text`` class/module has been renamed to ``MIMEText``.  The *_minor* "
"argument has been renamed to *_subtype*."
msgstr "``Text`` クラスおよびモジュールは ``MIMEText`` に名前が変更されました。*_minor* 引数も *_subtype* に名前が変更されています。"

#: ../../library/email.rst:369
msgid ""
"The ``MessageRFC822`` class/module has been renamed to ``MIMEMessage``.  "
"Note that an earlier version of :mod:`mimelib` called this class/module "
"``RFC822``, but that clashed with the Python standard library module "
":mod:`rfc822` on some case-insensitive file systems."
msgstr "``MessageRFC822`` クラスおよびモジュールは ``MIMEMessage`` に名前が変更されました。注意: 従来バージョンの :mod:`mimelib` では、このクラスおよびモジュールは ``RFC822`` という名前でしたが、これは大文字小文字を区別しないファイルシステムでは Python の標準ライブラリモジュール :mod:`rfc822` と名前がかち合ってしまっていました。"

#: ../../library/email.rst:374
msgid ""
"Also, the :class:`~email.mime.message.MIMEMessage` class now represents any "
"kind of MIME message with main type :mimetype:`message`.  It takes an "
"optional argument *_subtype* which is used to set the MIME subtype.  "
"*_subtype* defaults to :mimetype:`rfc822`."
msgstr "また、 :class:`~email.mime.message.MIMEMessage` クラスはいまや :mimetype:`message` main type をもつあらゆる種類の MIME メッセージを表現できるようになりました。これはオプション引数として、MIME subtype を指定する *_subtype* 引数をとることができるようになっています。デフォルトでは、 *_subtype* は :mimetype:`rfc822` になります。"

#: ../../library/email.rst:380
msgid ""
":mod:`mimelib` provided some utility functions in its :mod:`address` and "
":mod:`date` modules.  All of these functions have been moved to the "
":mod:`email.utils` module."
msgstr ":mod:`mimelib` では、 :mod:`address` および :mod:`date` モジュールでいくつかのユーティリティ関数が提供されていました。これらの関数はすべて :mod:`email.utils` モジュールの中に移されています。"

#: ../../library/email.rst:384
msgid ""
"The ``MsgReader`` class/module has been removed.  Its functionality is most "
"closely supported in the :func:`~email.iterators.body_line_iterator` "
"function in the :mod:`email.iterators` module."
msgstr "``MsgReader`` クラスおよびモジュールは廃止されました。これにもっとも近い機能は :mod:`email.iterators` モジュール中の :func:`~email.iterators.body_line_iterator` 関数によって提供されています。"

#: ../../library/email.rst:389
msgid "Footnotes"
msgstr "脚注"

#: ../../library/email.rst:390
msgid "Delivery Status Notifications (DSN) are defined in :rfc:`1894`."
msgstr "配送状態通知 (Delivery Status Notifications, DSN) は :rfc:`1894` によって定義されています。"
