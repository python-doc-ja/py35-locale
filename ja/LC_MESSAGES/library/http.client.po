# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# 
# Translators:
msgid ""
msgstr ""
"Project-Id-Version: Python 3.5\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2016-10-01 13:55+0000\n"
"Last-Translator: INADA Naoki <songofacandy@gmail.com>\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc-ja/python-35/language/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/http.client.rst:2
msgid ":mod:`http.client` --- HTTP protocol client"
msgstr ":mod:`http.client` --- HTTP プロトコルクライアント"

#: ../../library/http.client.rst:7
msgid "**Source code:** :source:`Lib/http/client.py`"
msgstr "**ソースコード:** :source:`Lib/http/client.py`"

#: ../../library/http.client.rst:17
msgid ""
"This module defines classes which implement the client side of the HTTP and "
"HTTPS protocols.  It is normally not used directly --- the module "
":mod:`urllib.request` uses it to handle URLs that use HTTP and HTTPS."
msgstr "このモジュールでは HTTP および HTTPS プロトコルのクライアント側を実装しているクラスを定義しています。通常、このモジュールは直接使いません --- :mod:`urllib.request` モジュールが HTTP や HTTPS を使った URL を扱う上でこのモジュールを使います。"

#: ../../library/http.client.rst:23
msgid ""
"The `Requests package <https://requests.readthedocs.org/>`_ is recommended "
"for a higher-level HTTP client interface."
msgstr "より高水準の HTTP クライアントインターフェイスとしては `Requests package <https://requests.readthedocs.org/>`_ がお奨めです。"

#: ../../library/http.client.rst:28
msgid ""
"HTTPS support is only available if Python was compiled with SSL support "
"(through the :mod:`ssl` module)."
msgstr "HTTPS のサポートは、Python が SSL サポート付きでコンパイルされている場合にのみ利用できます (:mod:`ssl` モジュールによって)。"

#: ../../library/http.client.rst:31
msgid "The module provides the following classes:"
msgstr "このモジュールでは以下のクラスを提供しています:"

#: ../../library/http.client.rst:36
msgid ""
"An :class:`HTTPConnection` instance represents one transaction with an HTTP "
"server.  It should be instantiated passing it a host and optional port "
"number.  If no port number is passed, the port is extracted from the host "
"string if it has the form ``host:port``, else the default HTTP port (80) is "
"used.  If the optional *timeout* parameter is given, blocking operations "
"(like connection attempts) will timeout after that many seconds (if it is "
"not given, the global default timeout setting is used). The optional "
"*source_address* parameter may be a tuple of a (host, port) to use as the "
"source address the HTTP connection is made from."
msgstr ":class:`HTTPConnection` インスタンスは、HTTP サーバとの一回のトランザクションを表現します。インスタンスの生成はホスト名とオプションのポート番号を与えて行います。ポート番号を指定しなかった場合、ホスト名文字列が ``host:port`` の形式であれば、ホスト名からポート番号を導き、そうでない場合には標準の HTTP ポート番号 (80) を使います。オプションの引数 *timeout* が渡された場合、ブロックする処理(コネクション接続など) のタイムアウト時間(秒数)として利用されます。(渡されなかった場合は、グローバルのデフォルトタイムアウト設定が利用されます。)オプションの引数 *source_address* を (host, port) という形式のタプルにすると HTTP 接続の接続元アドレスとして使用します。"

#: ../../library/http.client.rst:46
msgid ""
"For example, the following calls all create instances that connect to the "
"server at the same host and port::"
msgstr "例えば、以下の呼び出しは全て同じサーバの同じポートに接続するインスタンスを生成します::"

#: ../../library/http.client.rst:54
msgid "*source_address* was added."
msgstr "*source_address* が追加されました。"

#: ../../library/http.client.rst:57
msgid ""
"The  *strict* parameter was removed. HTTP 0.9-style \"Simple Responses\" are"
" not longer supported."
msgstr "*strict* パラメータは廃止されました。HTTP 0.9 の \"シンプルなレスポンス\" のような形式はもはやサポートされません。"

#: ../../library/http.client.rst:67
msgid ""
"A subclass of :class:`HTTPConnection` that uses SSL for communication with "
"secure servers.  Default port is ``443``.  If *context* is specified, it "
"must be a :class:`ssl.SSLContext` instance describing the various SSL "
"options."
msgstr ":class:`HTTPConnection` のサブクラスはセキュア・サーバとやりとりする為の SSL を使う場合に用います。デフォルトのポート番号は ``443`` です。*context* が指定されれば、それは様々な SSL オプションを記述する :class:`ssl.SSLContext` インスタンスでなければなりません。"

#: ../../library/http.client.rst:72
msgid ""
"*key_file* and *cert_file* are deprecated, please use "
":meth:`ssl.SSLContext.load_cert_chain` instead, or let "
":func:`ssl.create_default_context` select the system's trusted CA "
"certificates for you.  The *check_hostname* parameter is also deprecated; "
"the :attr:`ssl.SSLContext.check_hostname` attribute of *context* should be "
"used instead."
msgstr "*key_file* と *cert_file* は廃止されたので、代わりに :meth:`ssl.SSLContext.load_cert_chain` を使うか、または  :func:`ssl.create_default_context` が、システムが信頼する CA 証明書をあなたのために選んでくれます。 *check_hostname* パラメータも廃止されました;  *context* の :attr:`ssl.SSLContext.check_hostname` 属性を代わりに使うべきです。"

#: ../../library/http.client.rst:79
msgid ""
"Please read :ref:`ssl-security` for more information on best practices."
msgstr "ベストプラクティスに関するより良い情報が :ref:`ssl-security` にありますのでお読みください。"

#: ../../library/http.client.rst:81
msgid "*source_address*, *context* and *check_hostname* were added."
msgstr "*source_address*、*context* そして *check_hostname* が追加されました。"

#: ../../library/http.client.rst:84
msgid ""
"This class now supports HTTPS virtual hosts if possible (that is, if "
":data:`ssl.HAS_SNI` is true)."
msgstr "このクラスは現在、可能であれば(つまり :data:`ssl.HAS_SNI`  が真の場合) HTTPS のバーチャルホストをサポートしています。"

#: ../../library/http.client.rst:88
msgid ""
"The *strict* parameter was removed. HTTP 0.9-style \"Simple Responses\" are "
"no longer supported."
msgstr "*strict* パラメータは廃止されました。HTTP 0.9 の \"シンプルなレスポンス\" のような形式はもはやサポートされません。"

#: ../../library/http.client.rst:92
msgid ""
"This class now performs all the necessary certificate and hostname checks by"
" default. To revert to the previous, unverified, behavior "
":func:`ssl._create_unverified_context` can be passed to the *context* "
"parameter."
msgstr "このクラスは今や全ての必要な証明書とホスト名の検証をデフォルトで行うようになりました。昔の、検証を行わない振る舞いに戻したければ、 *context* に :func:`ssl._create_unverified_context` を渡すことで出来ます。"

#: ../../library/http.client.rst:101
msgid ""
"Class whose instances are returned upon successful connection.  Not "
"instantiated directly by user."
msgstr "コネクションに成功したときに、このクラスのインスタンスが返されます。ユーザーから直接利用されることはありません。"

#: ../../library/http.client.rst:104
msgid ""
"The *strict* parameter was removed. HTTP 0.9 style \"Simple Responses\" are "
"no longer supported."
msgstr "*strict* パラメータは廃止されました。HTTP 0.9 の \"シンプルなレスポンス\" のような形式はもはやサポートされません。"

#: ../../library/http.client.rst:109
msgid "The following exceptions are raised as appropriate:"
msgstr "状況に応じて、以下の例外が送出されます:"

#: ../../library/http.client.rst:114
msgid ""
"The base class of the other exceptions in this module.  It is a subclass of "
":exc:`Exception`."
msgstr "このモジュールにおける他の例外クラスの基底クラスです。 :exc:`Exception` のサブクラスです。"

#: ../../library/http.client.rst:120 ../../library/http.client.rst:131
#: ../../library/http.client.rst:136 ../../library/http.client.rst:141
#: ../../library/http.client.rst:146 ../../library/http.client.rst:151
msgid "A subclass of :exc:`HTTPException`."
msgstr ":exc:`HTTPException` サブクラスです。"

#: ../../library/http.client.rst:125
msgid ""
"A subclass of :exc:`HTTPException`, raised if a port is given and is either "
"non-numeric or empty."
msgstr ":exc:`HTTPException` のサブクラスです。ポート番号を指定したものの、その値が数字でなかったり空のオブジェクトであった場合に送出されます。"

#: ../../library/http.client.rst:156 ../../library/http.client.rst:161
#: ../../library/http.client.rst:166
msgid "A subclass of :exc:`ImproperConnectionState`."
msgstr ":exc:`ImproperConnectionState` のサブクラスです。"

#: ../../library/http.client.rst:171
msgid ""
"A subclass of :exc:`HTTPException`.  Raised if a server responds with a HTTP"
" status code that we don't understand."
msgstr ":exc:`HTTPException` のサブクラスです。サーバが理解できない HTTP 状態コードで応答した場合に送出されます。"

#: ../../library/http.client.rst:177
msgid ""
"A subclass of :exc:`HTTPException`.  Raised if an excessively long line is "
"received in the HTTP protocol from the server."
msgstr ""

#: ../../library/http.client.rst:183
msgid ""
"A subclass of :exc:`ConnectionResetError` and :exc:`BadStatusLine`.  Raised "
"by :meth:`HTTPConnection.getresponse` when the attempt to read the response "
"results in no data read from the connection, indicating that the remote end "
"has closed the connection."
msgstr ""

#: ../../library/http.client.rst:188
msgid "Previously, :exc:`BadStatusLine`\\ ``('')`` was raised."
msgstr ""

#: ../../library/http.client.rst:192
msgid "The constants defined in this module are:"
msgstr "このモジュールで定義されている定数は以下の通りです:"

#: ../../library/http.client.rst:196
msgid "The default port for the HTTP protocol (always ``80``)."
msgstr "HTTP プロトコルの標準のポート (通常は ``80``) です。"

#: ../../library/http.client.rst:200
msgid "The default port for the HTTPS protocol (always ``443``)."
msgstr "HTTPS プロトコルの標準のポート (通常は ``443``) です。"

#: ../../library/http.client.rst:204
msgid "This dictionary maps the HTTP 1.1 status codes to the W3C names."
msgstr "このディクショナリは、HTTP 1.1ステータスコードをW3Cの名前にマップしたものです。"

#: ../../library/http.client.rst:206
msgid ""
"Example: ``http.client.responses[http.client.NOT_FOUND]`` is ``'Not "
"Found'``."
msgstr "例: ``http.client.responses[http.client.NOT_FOUND]`` は ``'Not Found'`` を示します。"

#: ../../library/http.client.rst:208
msgid ""
"See :ref:`http-status-codes` for a list of HTTP status codes that are "
"available in this module as constants."
msgstr ""

#: ../../library/http.client.rst:215
msgid "HTTPConnection Objects"
msgstr "HTTPConnection オブジェクト"

#: ../../library/http.client.rst:217
msgid ":class:`HTTPConnection` instances have the following methods:"
msgstr ":class:`HTTPConnection` インスタンスには以下のメソッドがあります:"

#: ../../library/http.client.rst:222
msgid ""
"This will send a request to the server using the HTTP request method "
"*method* and the selector *url*."
msgstr "このメソッドは、HTTP 要求メソッド *method* およびセレクタ *url* を使って、要求をサーバに送ります。"

#: ../../library/http.client.rst:225
msgid ""
"If *body* is specified, the specified data is sent after the headers are "
"finished.  It may be a string, a :term:`bytes-like object`, an open "
":term:`file object`, or an iterable of :term:`bytes-like object`\\s.  If "
"*body* is a string, it is encoded as ISO-8859-1, the default for HTTP.  If "
"it is a bytes-like object the bytes are sent as is.  If it is a :term:`file "
"object`, the contents of the file is sent; this file object should support "
"at least the ``read()`` method.  If the file object has a ``mode`` "
"attribute, the data returned by the ``read()`` method will be encoded as "
"ISO-8859-1 unless the ``mode`` attribute contains the substring ``b``, "
"otherwise the data returned by ``read()`` is sent as is.  If *body* is an "
"iterable, the elements of the iterable are sent as is until the iterable is "
"exhausted."
msgstr ""

#: ../../library/http.client.rst:238
msgid ""
"The *headers* argument should be a mapping of extra HTTP headers to send "
"with the request."
msgstr "*headers* 引数は要求と同時に送信される拡張 HTTP ヘッダの内容からなるマップ型でなくてはなりません。"

#: ../../library/http.client.rst:241
msgid ""
"If *headers* does not contain a Content-Length item, one is added "
"automatically if possible.  If *body* is ``None``, the Content-Length header"
" is set to ``0`` for methods that expect a body (``PUT``, ``POST``, and "
"``PATCH``).  If *body* is a string or bytes object, the Content-Length "
"header is set to its length.  If *body* is a :term:`file object` and it "
"works to call :func:`~os.fstat` on the result of its ``fileno()`` method, "
"then the Content-Length header is set to the ``st_size`` reported by the "
"``fstat`` call.  Otherwise no Content-Length header is added."
msgstr ""

#: ../../library/http.client.rst:250
msgid "*body* can now be an iterable."
msgstr "*body* は iterable オブジェクトとして使用できます。"

#: ../../library/http.client.rst:255
msgid ""
"Should be called after a request is sent to get the response from the "
"server. Returns an :class:`HTTPResponse` instance."
msgstr "サーバに対して HTTP 要求を送り出した後に呼び出されなければりません。要求に対する応答を取得します。 :class:`HTTPResponse` インスタンスを返します。"

#: ../../library/http.client.rst:260
msgid ""
"Note that you must have read the whole response before you can send a new "
"request to the server."
msgstr "すべての応答を読み込んでからでなければ新しい要求をサーバに送ることはできないことに注意しましょう。"

#: ../../library/http.client.rst:263
msgid ""
"If a :exc:`ConnectionError` or subclass is raised, the "
":class:`HTTPConnection` object will be ready to reconnect when a new request"
" is sent."
msgstr ""

#: ../../library/http.client.rst:271
msgid ""
"Set the debugging level.  The default debug level is ``0``, meaning no "
"debugging output is printed.  Any value greater than ``0`` will cause all "
"currently defined debug output to be printed to stdout.  The ``debuglevel`` "
"is passed to any new :class:`HTTPResponse` objects that are created."
msgstr ""

#: ../../library/http.client.rst:281
msgid ""
"Set the host and the port for HTTP Connect Tunnelling. This allows running "
"the connection through a proxy server."
msgstr "HTTP トンネリング接続のホスト名とポート番号を設定します。これによりプロキシサーバを通しての接続を実行できます。"

#: ../../library/http.client.rst:284
msgid ""
"The host and port arguments specify the endpoint of the tunneled connection "
"(i.e. the address included in the CONNECT request, *not* the address of the "
"proxy server)."
msgstr ""

#: ../../library/http.client.rst:288
msgid ""
"The headers argument should be a mapping of extra HTTP headers to send with "
"the CONNECT request."
msgstr "ヘッダのパラメータは CONNECT リクエストで送信するために他の HTTP ヘッダにマッピングされます。"

#: ../../library/http.client.rst:291
msgid ""
"For example, to tunnel through a HTTPS proxy server running locally on port "
"8080, we would pass the address of the proxy to the :class:`HTTPSConnection`"
" constructor, and the address of the host that we eventually want to reach "
"to the :meth:`~HTTPConnection.set_tunnel` method::"
msgstr ""

#: ../../library/http.client.rst:306
msgid ""
"Connect to the server specified when the object was created.  By default, "
"this is called automatically when making a request if the client does not "
"already have a connection."
msgstr ""

#: ../../library/http.client.rst:313
msgid "Close the connection to the server."
msgstr "サーバへの接続を閉じます。"

#: ../../library/http.client.rst:315
msgid ""
"As an alternative to using the :meth:`request` method described above, you "
"can also send your request step by step, by using the four functions below."
msgstr "上で説明した :meth:`request` メソッドを使うかわりに、以下の4つの関数を使用して要求をステップバイステップで送信することもできます。"

#: ../../library/http.client.rst:322
msgid ""
"This should be the first call after the connection to the server has been "
"made. It sends a line to the server consisting of the *method* string, the "
"*url* string, and the HTTP version (``HTTP/1.1``).  To disable automatic "
"sending of ``Host:`` or ``Accept-Encoding:`` headers (for example to accept "
"additional content encodings), specify *skip_host* or *skip_accept_encoding*"
" with non-False values."
msgstr ""

#: ../../library/http.client.rst:332
msgid ""
"Send an :rfc:`822`\\ -style header to the server.  It sends a line to the "
"server consisting of the header, a colon and a space, and the first "
"argument.  If more arguments are given, continuation lines are sent, each "
"consisting of a tab and an argument."
msgstr ":rfc:`822` 形式のヘッダをサーバに送ります。この処理では、 *header* 、コロンとスペース、そして最初の引数からなる 1 行をサーバに送ります。追加の引数を指定した場合、継続して各行にタブ一つと引数の入った引数行が送信されます。"

#: ../../library/http.client.rst:340
msgid ""
"Send a blank line to the server, signalling the end of the headers. The "
"optional *message_body* argument can be used to pass a message body "
"associated with the request.  The message body will be sent in the same "
"packet as the message headers if it is string, otherwise it is sent in a "
"separate packet."
msgstr "サーバに空行を送り、ヘッダ部が終了したことを通知します。オプションの *message_body* 引数を、リクエストに関連したメッセージボディを渡すのに使うことが出来ます。"

#: ../../library/http.client.rst:348
msgid ""
"Send data to the server.  This should be used directly only after the "
":meth:`endheaders` method has been called and before :meth:`getresponse` is "
"called."
msgstr "サーバにデータを送ります。このメソッドは :meth:`endheaders`  が呼び出された直後で、かつ :meth:`getresponse` が呼び出される前に使わなければなりません。"

#: ../../library/http.client.rst:356
msgid "HTTPResponse Objects"
msgstr "HTTPResponse オブジェクト"

#: ../../library/http.client.rst:358
msgid ""
"An :class:`HTTPResponse` instance wraps the HTTP response from the server.  "
"It provides access to the request headers and the entity body.  The response"
" is an iterable object and can be used in a with statement."
msgstr ":class:`HTTPResponse` インスタンスはサーバからのHTTPレスポンスをラップします。これを使用してリクエストヘッダとエンティティボディへアクセスすることができます。レスポンスはイテレート可能なオブジェクトであるので、with文と使うことが可能です。"

#: ../../library/http.client.rst:363
msgid ""
"The :class:`io.BufferedIOBase` interface is now implemented and all of its "
"reader operations are supported."
msgstr ""

#: ../../library/http.client.rst:370
msgid "Reads and returns the response body, or up to the next *amt* bytes."
msgstr "応答の本体全体か、*amt* バイトまで読み出して返します。"

#: ../../library/http.client.rst:374
msgid ""
"Reads up to the next len(b) bytes of the response body into the buffer *b*. "
"Returns the number of bytes read."
msgstr "バッファ *b* にレスポンスボディの次のデータを最大 len(b) バイト読み込みます。何バイト読んだかを返します。"

#: ../../library/http.client.rst:381
msgid ""
"Return the value of the header *name*, or *default* if there is no header "
"matching *name*.  If there is more than one  header with the name *name*, "
"return all of the values joined by ', '.  If 'default' is any iterable other"
" than a single string, its elements are similarly returned joined by commas."
msgstr ""

#: ../../library/http.client.rst:388
msgid "Return a list of (header, value) tuples."
msgstr "(header, value) のタプルからなるリストを返します。"

#: ../../library/http.client.rst:392
msgid "Return the ``fileno`` of the underlying socket."
msgstr "ソケットの ``fileno`` を返します。"

#: ../../library/http.client.rst:396
msgid ""
"A :class:`http.client.HTTPMessage` instance containing the response headers."
"  :class:`http.client.HTTPMessage` is a subclass of "
":class:`email.message.Message`."
msgstr ""

#: ../../library/http.client.rst:402
msgid ""
"HTTP protocol version used by server.  10 for HTTP/1.0, 11 for HTTP/1.1."
msgstr "サーバが使用した HTTP プロトコルバージョンです。10 は HTTP/1.0 を、11 は HTTP/1.1 を表します。"

#: ../../library/http.client.rst:406
msgid "Status code returned by server."
msgstr "サーバから返される状態コードです。"

#: ../../library/http.client.rst:410
msgid "Reason phrase returned by server."
msgstr "サーバから返される応答の理由文です。"

#: ../../library/http.client.rst:414
msgid ""
"A debugging hook.  If :attr:`debuglevel` is greater than zero, messages will"
" be printed to stdout as the response is read and parsed."
msgstr ""

#: ../../library/http.client.rst:419
msgid "Is ``True`` if the stream is closed."
msgstr "ストリームが閉じている場合 ``True`` となります。"

#: ../../library/http.client.rst:422
msgid "Examples"
msgstr "使用例"

#: ../../library/http.client.rst:424
msgid "Here is an example session that uses the ``GET`` method::"
msgstr "以下は ``GET`` リクエストの送信方法を示した例です::"

#: ../../library/http.client.rst:448
msgid ""
"Here is an example session that uses the ``HEAD`` method.  Note that the "
"``HEAD`` method never returns any data. ::"
msgstr "次の例のセッションでは、``HEAD`` メソッドを利用しています。``HEAD`` メソッドは全くデータを返さないことに注目してください。 ::"

#: ../../library/http.client.rst:463
msgid "Here is an example session that shows how to ``POST`` requests::"
msgstr "以下は ``POST`` リクエストの送信方法を示した例です::"

#: ../../library/http.client.rst:479
msgid ""
"Client side ``HTTP PUT`` requests are very similar to ``POST`` requests. The"
" difference lies only the server side where HTTP server will allow resources"
" to be created via ``PUT`` request. It should be noted that custom HTTP "
"methods +are also handled in :class:`urllib.request.Request` by sending the "
"appropriate +method attribute.Here is an example session that shows how to "
"do ``PUT`` request using http.client::"
msgstr ""

#: ../../library/http.client.rst:501
msgid "HTTPMessage Objects"
msgstr "HTTPMessage オブジェクト"

#: ../../library/http.client.rst:503
msgid ""
"An :class:`http.client.HTTPMessage` instance holds the headers from an HTTP "
"response.  It is implemented using the :class:`email.message.Message` class."
msgstr ":class:`http.client.HTTPMessage` のインスタンスは HTTP レスポンスヘッダを格納します。 :class:`email.message.Message` クラスを利用して実装されています。"
