# SOME DESCRIPTIVE TITLE.
# Copyright (C) 1990-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# 
# Translators:
# E. Kawashima <e.kawaschima+transifex@gmail.com>, 2016
# Hiroaki Itoh <xwhhsprings@gmail.com>, 2016
msgid ""
msgstr ""
"Project-Id-Version: Python 3.5\n"
"Report-Msgid-Bugs-To: \n"
"PO-Revision-Date: 2016-03-18 20:08+0000\n"
"Last-Translator: E. Kawashima <e.kawaschima+transifex@gmail.com>\n"
"Language-Team: Japanese (http://www.transifex.com/python-doc-ja/python-35/language/ja/)\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Language: ja\n"
"Plural-Forms: nplurals=1; plural=0;\n"

#: ../../library/compileall.rst:2
msgid ":mod:`compileall` --- Byte-compile Python libraries"
msgstr ":mod:`compileall` --- Python ライブラリをバイトコンパイル"

#: ../../library/compileall.rst:7
msgid "**Source code:** :source:`Lib/compileall.py`"
msgstr "**ソースコード:** :source:`Lib/compileall.py`"

#: ../../library/compileall.rst:12
msgid ""
"This module provides some utility functions to support installing Python "
"libraries.  These functions compile Python source files in a directory tree."
" This module can be used to create the cached byte-code files at library "
"installation time, which makes them available for use even by users who "
"don't have write permission to the library directories."
msgstr "このモジュールは、Python ライブラリのインストールを助けるユーティリティ関数群を提供します。この関数群は、ディレクトリツリー内の Python ソースファイルをコンパイルします。このモジュールを使って、キャッシュされたバイトコードファイルをライブラリのインストール時に生成することで、ライブラリディレクトリに書き込み権限をもたないユーザでも、これらを利用できるようになります。"

#: ../../library/compileall.rst:20
msgid "Command-line use"
msgstr "コマンドラインでの使用"

#: ../../library/compileall.rst:22
msgid ""
"This module can work as a script (using :program:`python -m compileall`) to "
"compile Python sources."
msgstr "このモジュールは、 (:program:`python -m compileall` を使って) Python ソースをコンパイルするスクリプトとして機能します。"

#: ../../library/compileall.rst:30
msgid ""
"Positional arguments are files to compile or directories that contain source"
" files, traversed recursively.  If no argument is given, behave as if the "
"command line was ``-l <directories from sys.path>``."
msgstr "位置引数は、コンパイルするファイル群か、再帰的に横断されるディレクトリでソースファイル群を含むものです。引数が与えられなければ、``-l <directories from sys.path>`` を渡したのと同じように動作します。"

#: ../../library/compileall.rst:36
msgid ""
"Do not recurse into subdirectories, only compile source code files directly "
"contained in the named or implied directories."
msgstr "サブディレクトリを再帰処理せず、指名または暗示されたディレクトリ群に含まれるソースコードファイル群だけをコンパイルします。"

#: ../../library/compileall.rst:41
msgid "Force rebuild even if timestamps are up-to-date."
msgstr "タイムスタンプが最新であってもリビルドを強制します。"

#: ../../library/compileall.rst:45
msgid ""
"Do not print the list of files compiled. If passed once, error messages will"
" still be printed. If passed twice (``-qq``), all output is suppressed."
msgstr "コンパイルされたファイルのリストを出力しません。\n一つ渡された場合でもエラーメッセージは出力されます。\n二つ (``-qq``) の場合全ての出力は抑制されます。"

#: ../../library/compileall.rst:50
msgid ""
"Directory prepended to the path to each file being compiled.  This will "
"appear in compilation time tracebacks, and is also compiled in to the byte-"
"code file, where it will be used in tracebacks and other messages in cases "
"where the source file does not exist at the time the byte-code file is "
"executed."
msgstr "コンパイルされるそれぞれのファイルへのパスの先頭に、ディレクトリを追加します。これはコンパイル時トレースバックに使われ、バイトコードファイルが実行される時点でソースファイルが存在しない場合に、トレースバックやその他のメッセージに使われるバイトコードファイルにもコンパイルされます。"

#: ../../library/compileall.rst:58
msgid ""
"regex is used to search the full path to each file considered for "
"compilation, and if the regex produces a match, the file is skipped."
msgstr "regex を使って、コンパイル候補のそれぞれのファイルのフルパスを検索し、regex がマッチしたファイルを除外します。"

#: ../../library/compileall.rst:63
msgid ""
"Read the file ``list`` and add each line that it contains to the list of "
"files and directories to compile.  If ``list`` is ``-``, read lines from "
"``stdin``."
msgstr "ファイル ``list`` を読み込み、そのファイルのそれぞれの行を、コンパイルするファイルとディレクトリのリストに加えます。``list`` が ``-`` なら、``stdin`` の行を読み込みます。"

#: ../../library/compileall.rst:69
msgid ""
"Write the byte-code files to their legacy locations and names, which may "
"overwrite byte-code files created by another version of Python.  The default"
" is to write files to their :pep:`3147` locations and names, which allows "
"byte-code files from multiple versions of Python to coexist."
msgstr "バイトコードファイルを、他のバージョンの Python によって生成されたバイトコードファイルを上書きするかもしれない、レガシーな場所に生成します。デフォルトでは :pep:`3147` で決められた場所と名前を使い、複数のバージョンの Python が共存できるようにします。"

#: ../../library/compileall.rst:76
msgid ""
"Control the maximum recursion level for subdirectories. If this is given, "
"then ``-l`` option will not be taken into account. :program:`python -m "
"compileall <directory> -r 0` is equivalent to :program:`python -m compileall"
" <directory> -l`."
msgstr "サブディレクトリの最大再起深度を制御します。\nこのオプションが与えられた場合、``-l`` オプションは無視されます。\n:program:`python -m compileall <directory> -r 0` は :program:`python -m compileall <directory> -l` と等価です。"

#: ../../library/compileall.rst:83
msgid ""
"Use *N* workers to compile the files within the given directory. If ``0`` is"
" used, then the result of :func:`os.cpu_count()` will be used."
msgstr ""

#: ../../library/compileall.rst:87
msgid "Added the ``-i``, ``-b`` and ``-h`` options."
msgstr "``-i``, ``-b``, ``-h`` オプションを追加。"

#: ../../library/compileall.rst:90
msgid ""
"Added the  ``-j``, ``-r``, and ``-qq`` options.  ``-q`` option was changed "
"to a multilevel value.  ``-b`` will always produce a byte-code file ending "
"in ``.pyc``, never ``.pyo``."
msgstr ""

#: ../../library/compileall.rst:96
msgid ""
"There is no command-line option to control the optimization level used by "
"the :func:`compile` function, because the Python interpreter itself already "
"provides the option: :program:`python -O -m compileall`."
msgstr ":func:`compile` 関数で利用される最適化レベルを制御するコマンドラインオプションはありません。 Python インタプリタ自体のオプションを使ってください: :program:`python -O -m compileall`."

#: ../../library/compileall.rst:101
msgid "Public functions"
msgstr "パブリックな関数"

#: ../../library/compileall.rst:105
msgid ""
"Recursively descend the directory tree named by *dir*, compiling all "
":file:`.py` files along the way."
msgstr "*dir* で指定されたディレクトリを再帰的に下降し、見つかった :file:`.py` を全てコンパイルします。"

#: ../../library/compileall.rst:108
msgid ""
"The *maxlevels* parameter is used to limit the depth of the recursion; it "
"defaults to ``10``."
msgstr "*maxlevels* パラメタは、再帰する深さの限度に使われ、デフォルトは ``10`` です。"

#: ../../library/compileall.rst:111
msgid ""
"If *ddir* is given, it is prepended to the path to each file being compiled "
"for use in compilation time tracebacks, and is also compiled in to the byte-"
"code file, where it will be used in tracebacks and other messages in cases "
"where the source file does not exist at the time the byte-code file is "
"executed."
msgstr "*ddir* が与えられれば、コンパイルされるそれぞれのファイルへのパスの先頭に、そのディレクトリを追加します。これはコンパイル時トレースバックに使われ、バイトコードファイルが実行される時点でソースファイルが存在しない場合に、トレースバックやその他のメッセージに使われるバイトコードファイルにもコンパイルされます。"

#: ../../library/compileall.rst:117
msgid ""
"If *force* is true, modules are re-compiled even if the timestamps are up to"
" date."
msgstr "*force* が真の場合、モジュールはファイルの更新日付に関わりなく再コンパイルされます。"

#: ../../library/compileall.rst:120
msgid ""
"If *rx* is given, its search method is called on the complete path to each "
"file considered for compilation, and if it returns a true value, the file is"
" skipped."
msgstr "*rx* が与えられれば、コンパイル候補のそれぞれのファイルのフルパスに対して検索メソッドが呼び出され、それが真値を返したら、そのファイルは除外されます。"

#: ../../library/compileall.rst:124 ../../library/compileall.rst:170
msgid ""
"If *quiet* is ``False`` or ``0`` (the default), the filenames and other "
"information are printed to standard out. Set to ``1``, only errors are "
"printed. Set to ``2``, all output is suppressed."
msgstr "*quiet* が ``False`` か ``0`` (デフォルト) の場合、ファイル名とその他の情報は標準出力に表示されます。\n``1`` の場合エラーのみが表示されます。\n``2`` の場合出力はすべて抑制されます。"

#: ../../library/compileall.rst:128 ../../library/compileall.rst:174
msgid ""
"If *legacy* is true, byte-code files are written to their legacy locations "
"and names, which may overwrite byte-code files created by another version of"
" Python.  The default is to write files to their :pep:`3147` locations and "
"names, which allows byte-code files from multiple versions of Python to "
"coexist."
msgstr "*legacy* が真の時、バイトコードファイルは古い場所と名前に書かれ、他のバージョンの Python によって作られたバイトコードファイルを上書きする可能性があります。デフォルトは :pep:`3147` で決められた場所と名前を使い、複数のバージョンの Python のバイトコードファイルが共存できるようにします。"

#: ../../library/compileall.rst:134 ../../library/compileall.rst:180
msgid ""
"*optimize* specifies the optimization level for the compiler.  It is passed "
"to the built-in :func:`compile` function."
msgstr "*optimize* はコンパイラの最適化レベルを定義します。これは組み込みの :func:`compile` 関数に渡されます。"

#: ../../library/compileall.rst:137
msgid ""
"The argument *workers* specifies how many workers are used to compile files "
"in parallel. The default is to not use multiple workers. If the platform "
"can't use multiple workers and *workers* argument is given, then sequential "
"compilation will be used as a fallback.  If *workers* is lower than ``0``, a"
" :exc:`ValueError` will be raised."
msgstr ""

#: ../../library/compileall.rst:143 ../../library/compileall.rst:200
msgid "Added the *legacy* and *optimize* parameter."
msgstr "*legacy* と *optimize* 引数を追加しました。"

#: ../../library/compileall.rst:146
msgid "Added the *workers* parameter."
msgstr "``workers`` パラメータが追加されました。"

#: ../../library/compileall.rst:149 ../../library/compileall.rst:185
#: ../../library/compileall.rst:203
msgid "*quiet* parameter was changed to a multilevel value."
msgstr ""

#: ../../library/compileall.rst:152 ../../library/compileall.rst:188
#: ../../library/compileall.rst:206
msgid ""
"The *legacy* parameter only writes out ``.pyc`` files, not ``.pyo`` files no"
" matter what the value of *optimize* is."
msgstr ""

#: ../../library/compileall.rst:158
msgid "Compile the file with path *fullname*."
msgstr "パス *fullname* のファイルをコンパイルします。"

#: ../../library/compileall.rst:160
msgid ""
"If *ddir* is given, it is prepended to the path to the file being compiled "
"for use in compilation time tracebacks, and is also compiled in to the byte-"
"code file, where it will be used in tracebacks and other messages in cases "
"where the source file does not exist at the time the byte-code file is "
"executed."
msgstr "*ddir* が与えられれば、コンパイルされるファイルへのパスの先頭に、そのディレクトリを追加します。これはコンパイル時トレースバックに使われ、バイトコードファイルが実行される時点でソースファイルが存在しない場合に、トレースバックやその他のメッセージに使われるバイトコードファイルにもコンパイルされます。"

#: ../../library/compileall.rst:166
msgid ""
"If *rx* is given, its search method is passed the full path name to the file"
" being compiled, and if it returns a true value, the file is not compiled "
"and ``True`` is returned."
msgstr "*rx* が与えられれば、コンパイル候補のファイルのフルパスに対して検索メソッドが呼び出され、それが真値を返したら、ファイルはコンパイルされず、``True`` が返されます。"

#: ../../library/compileall.rst:194
msgid ""
"Byte-compile all the :file:`.py` files found along ``sys.path``. If "
"*skip_curdir* is true (the default), the current directory is not included "
"in the search.  All other parameters are passed to the :func:`compile_dir` "
"function.  Note that unlike the other compile functions, ``maxlevels`` "
"defaults to ``0``."
msgstr "``sys.path`` に含まれる、全ての :file:`.py` ファイルをバイトコンパイルします。 *skip_curdir* が真（デフォルト）の時、カレントディレクトリは検索されません。その他のパラメタはすべて :func:`compile_dir` 関数に渡されます。なお、他のコンパイル関数とは違い、 maxlevels* のデフォルトは ``0`` です。"

#: ../../library/compileall.rst:210
msgid ""
"To force a recompile of all the :file:`.py` files in the :file:`Lib/` "
"subdirectory and all its subdirectories::"
msgstr ":file:`Lib/` ディレクトリ以下にある全ての :file:`.py` ファイルを強制的に再コンパイルするには、以下のようにします::"

#: ../../library/compileall.rst:224
msgid "Module :mod:`py_compile`"
msgstr "Module :mod:`py_compile`"

#: ../../library/compileall.rst:225
msgid "Byte-compile a single source file."
msgstr "一つのソースファイルをバイトコンパイルします。"
